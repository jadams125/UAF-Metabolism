---
title: "SalchaRun1"
author: "Jacob Adams"
date: "12/5/2022"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Packages
``` {r}
library(ggpubr)
library(anytime)
library(googlesheets4)
library(ggpmisc)
library(plyr)
library(grid)
library(ggpubr)
library(anytime)
library(googlesheets4)
library(ggpmisc)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(zoo)
library(xts)
library(forecast)
library(googledrive)
library(streamMetabolizer)
library(readr)
library(here)
library(rstan)
library(imputeTS)
library(itsmr)
library(purrr)
library(naniar)
library(data.table)

```

Data Prep
```{r}
Salcha.exo.2021 <- read.csv(file=file.path("C:/Users/jacob/OneDrive - University of Alaska/GitHub/Salcha/EXO_processed/SALCHA_EXO_int.2021.csv"))

ts_2021 <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/UAF-Metabolism/ts_2021.csv")

# setwd("C:/Users/jacob/OneDrive - University of Alaska/GitHub/Salcha/EXO_data/from_internal_harddrive/")

test <- full_join(ts_2021, Salcha.exo.2021, by = "datetimeAK")


anyNA(test, recursive = TRUE)
lapply(test, summary)



test <- test %>% select(datetimeAK, ODO.Psat.mn.adj, ODO.mgL.mn, Temp.C.int)



write.csv(test, "C:/Users/jacob/OneDrive - University of Alaska/GitHub/UAF-Metabolism/salcha.2021.full.ts.csv")



#interpolate Any missing data:

anyNA(test, recursive = TRUE)
lapply(test, summary)

test %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = ODO.mgL.mn)) + geom_miss_point()
test %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = ODO.Psat.mn.adj)) + geom_miss_point()
test %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = Temp.C.int)) + geom_miss_point()

#looks like just out of water points


test$ODO.mgL.mn <- na_kalman(test$ODO.mgL.mn)
test$ODO.Psat.mn.adj <- na_kalman(test$ODO.Psat.mn.adj)
test$Temp.C.int <- na_kalman(test$Temp.C.int, type = "level")

Salcha.exo.2021 <- test

```

```{r}

#Light

CRREL <- read.csv(here("Crell_met_PAR.csv"), skip = 5)
# CRREL <- read_csv(here("Crell_met_PAR.csv"), skip = 5)

CRREL$datetimeAK <- strptime(CRREL$Time, '%m/%d/%Y %H:%M')

CRREL$datetimeAK <- as.POSIXct(as.character(CRREL$datetimeAK))

CRREL <- CRREL %>% rename(ParWm2 = CPCRW.CRREL.Main.Met.Station..PAR_Den_AVG.W.m2.)

Salcha.exo.2021$datetimeAK <- as.POSIXct(Salcha.exo.2021$datetimeAK)

ts_2021$datetimeAK <- as.POSIXct(ts_2021$datetimeAK, tz = "America/Anchorage")


CRREL_SALCHA1 <- left_join(ts_2021, CRREL, by = "datetimeAK")


write.csv(CRREL_SALCHA1, here("Crell_met_PAR2.csv"))

anyNA(CRREL_SALCHA1, recursive = TRUE)
lapply(CRREL_SALCHA1, summary)


CRREL_SALCHA1 %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = ParWm2)) + geom_miss_point()

CRREL_SALCHA1$ParWm2 <- na_kalman(CRREL_SALCHA1$ParWm2)

CRREL_SALCHA1 %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = ParWm2)) + geom_miss_point()

```

```{r}
# Discharge and Depth
dischargeSalcha <- read.csv(here("dischargeSalchaTXT.csv"))


dischargeSalcha <- dischargeSalcha[-c(1), ]

dischargeSalcha$datetimeAK <- as.POSIXct(mdy_hm(dischargeSalcha$datetime))

dischargeSalcha$datetimeAK <- force_tz(dischargeSalcha$datetimeAK, "America/Anchorage")

dischargeSalcha <- dischargeSalcha %>% rename(depth = X1761_00065)
dischargeSalcha <- dischargeSalcha %>% rename(discharge = X1760_00060)

dischargeSalcha <- dischargeSalcha %>% select(discharge, depth, datetimeAK)

# convert to Meters 

dischargeSalcha$depth <- as.numeric(dischargeSalcha$depth) * 0.3048
dischargeSalcha$discharge <- as.numeric(dischargeSalcha$discharge) * 0.0283168


dischargeSalcha <- full_join(ts_2021, dischargeSalcha, by = "datetimeAK")

anyNA(dischargeSalcha, recursive = TRUE)
lapply(dischargeSalcha, summary)

dischargeSalcha %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = discharge)) + geom_miss_point()
dischargeSalcha %>% ggplot(aes(x = as.POSIXct(datetimeAK), y = depth)) + geom_miss_point()

dischargeSalcha$discharge <- na_kalman(dischargeSalcha$discharge, type = "level")
dischargeSalcha$depth <- na_kalman(dischargeSalcha$depth, type = "level")


write.csv(dischargeSalcha, (here("q_data.csv")))


```

```{r}

#join them:
merge1 <- merge(dischargeSalcha, CRREL_SALCHA1, by = "datetimeAK")
Salcha.exo.2021 <- merge(merge1, Salcha.exo.2021, by = "datetimeAK")

#Gap filled Data frame:
#DO, water temp, Time
Salcha.exo.2021 <- Salcha.exo.2021 %>% select(ODO.mgL.mn, Temp.C.int, datetimeAK, ParWm2, discharge, depth)


anyNA(Salcha.exo.2021, recursive = TRUE)
lapply(Salcha.exo.2021, summary)

Salcha.exo.2021$datetimeAK <- force_tz(as.POSIXct(Salcha.exo.2021$datetimeAK), "America/Anchorage")


# 
# #Join them together
# salchaData <- join(Salcha.exo.2021, dischargeSalcha, by = "datetimeAK")


salchaData <- Salcha.exo.2021

salchaData$datetimeAK <- as.POSIXct(salchaData$datetimeAK) 

#Solar Time and Light

salchaData$solar.time <- calc_solar_time(salchaData$datetimeAK, -146.9281)

salchaData$light <- calc_light(salchaData$solar.time, 64.47153, -146.9281)



#find max PAR value from poker to rate the CRREL 
Poke.2021.PAR.url <- "https://drive.google.com/drive/u/1/folders/1FBILijNS4ewze9O62ZFFclC86EnB0Iw_"
pokeparget <- drive_get(as_id(Poke.2021.PAR.url))
pokepar_glist <- drive_ls(pokeparget, pattern = "POKE_11619_002_001_EndOfSeason.CSV")
walk(pokepar_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
poke2021par <- read.csv("POKE_11619_002_001_EndOfSeason.CSV", 
                              skip = 8, header = FALSE)

poke2021par <- poke2021par %>%
  dplyr::rename(ScanNumber = V1, Date = V2, Time = V3, RawValue = V4, CalibratedValue = V5)

#Fix Date Time
poke2021par$datetimeAK <- paste(poke2021par$Date, poke2021par$Time, sep="")

poke2021par$datetimeAK <-  dmy_hms(poke2021par$datetimeAK)
poke2021par$datetimeAK <- force_tz(poke2021par$datetimeAK, "America/Anchorage")

#Calibrate logger 11619 to LICOR
poke2021par$CalibratedValue <- poke2021par$CalibratedValue * 0.035


plot(poke2021par$datetimeAK, poke2021par$CalibratedValue)
plot(salchaData$datetimeAK, salchaData$ParWm2.int)

max.par.poke <- max(poke2021par$CalibratedValue)

max.par.crrel <- max(salchaData$ParWm2)

multiplyFactor <- max.par.poke/max.par.crrel


salchaData$Light_umol <- salchaData$ParWm2 *multiplyFactor
```

```{r}
#DO SAT

vaul.2021.atmo.url <- "https://drive.google.com/drive/u/1/folders/1F80dynCpIo87e5EalwjNprze5UnLiomX"
vaulatmo <- drive_get(as_id(vaul.2021.atmo.url))
test1vaul2021_glist <- drive_ls(vaulatmo, pattern = "20574425_VAUL_atmo.csv")
walk(test1vaul2021_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
vaul2021atmo.Data <- read.csv("20574425_VAUL_atmo.csv",
                              skip = 1, header = TRUE)

names(vaul2021atmo.Data)[3]= c("pressure.air.kpa")
names(vaul2021atmo.Data)[2]= c("dateTimePre")
names(vaul2021atmo.Data)[4]= c("TempC.air.vaul")


vaul2021atmo.Data$vaul.pressure.air.mbar <- vaul2021atmo.Data$pressure.air.kpa* 10


## Go off VAUL and adjust for elevation

#VAUL elevation: 210 meters, 688.976 feet
#Salcha elevation: 196 meters, 643.045 feet


##calc pressure at sea level

#air pressure at sea level in mmHg
#formula from https://keisan.casio.com/exec/system/1224575267

vaul2021atmo.Data$mmHg.sea.level <- vaul2021atmo.Data$vaul.pressure.air.mbar*((1-(0.0065*210)/(vaul2021atmo.Data$TempC.air.vaul + (0.0065*210) +273.15))^(-5.257)) / 1.33322387415

#air pressure at salcha elevation

vaul2021atmo.Data$salcha.air.pressure.mbar <- (vaul2021atmo.Data$mmHg.sea.level -(2.5* 688.976/100))* 1.33322 


vaul2021atmo.Data$datetimeAK <- as.POSIXct(vaul2021atmo.Data$dateTimePre, format="%m/%d/%y %I:%M:%S %p", tz="America/Anchorage")

vaul2021atmo.Data <- vaul2021atmo.Data %>% select(datetimeAK, TempC.air.vaul, salcha.air.pressure.mbar)

salchatest1 <- plyr::join(vaul2021atmo.Data, salchaData, by = "datetimeAK")


salchatest1$ModeledDOSat <- calc_DO_sat(salchatest1$Temp.C.int, salchatest1$salcha.air.pressure.mbar , model = "garcia-benson")


#####EAFB pressure test

PAEI_2021 <- read.csv(here("PAEI_2021.csv"), skip = 6, header = TRUE)

PAEI_2021 <- PAEI_2021[-1,]


PAEI_2021$datetimeAK <- as.POSIXct(mdy_hm(PAEI_2021$Date_Time, tz = "America/Anchorage"))

PAEI_2021$datetimeAK <- round_date(PAEI_2021$datetimeAK, "15 mins")

PAEI_2021 <- PAEI_2021 %>% select(datetimeAK, sea_level_pressure_set_1, air_temp_set_1)

data_mean1 <- aggregate(as.numeric(sea_level_pressure_set_1) ~ datetimeAK, PAEI_2021, mean)

joinEAFB <- left_join(ts_2021, data_mean1, by ="datetimeAK")

joinEAFB$air.temp.filled <- na_kalman(joinEAFB$`as.numeric(air_temp_set_1)`)

joinEAFB$air.pressure.filled <- na_kalman(joinEAFB$`as.numeric(sea_level_pressure_set_1)`, type = "level")



joinEAFB$air.pressure.filled.mbar.eafb <- joinEAFB$air.pressure.filled / 0.029529983071445

EAFB <- joinEAFB %>% select(datetimeAK, air.pressure.filled.mbar.eafb)

EAFB$air.pressure.filled.mbar.eafb.elevation <- (EAFB$air.pressure.filled.mbar.eafb -(2.5* 652.887/100))


salchatest1 <- full_join(salchatest1,EAFB, by = "datetimeAK")


#DO sat AIFB
salchatest1$DO.sat.EAFB <- calc_DO_sat(salchatest1$Temp.C.int, salchatest1$air.pressure.filled.mbar.eafb.elevation)



salchatest1 %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-07-10 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.sat.EAFB, colour= "DO.sat (EAFB Calcualted)")) + geom_line(aes(y = ODO.mgL.mn, colour = 'DO.obs')) + labs(colour="Datasets", y = "DO (mg/L)")



#metabolism

salchaData <- salchatest1

salchaData <- salchaData %>% rename(temp.water = Temp.C.int)
salchaData <- salchaData %>% rename(DO.obs = ODO.mgL.mn)
salchaData <- salchaData %>% rename(DO.sat.modeled = ModeledDOSat)


salchaData$datetimeAK <- salchaData$datetimeAK
CRREL$datetimeAK <- CRREL$datetimeAK


CRREL_SALCHA <- salchaData %>% select(datetimeAK, DO.obs,DO.sat.modeled,solar.time,solar.time, depth, temp.water, Light_umol, discharge, salcha.air.pressure.mbar, air.pressure.filled.mbar.eafb.elevation, DO.sat.EAFB)


CRREL_SALCHA <- CRREL_SALCHA %>% filter(datetimeAK >= "2021-05-18 12:00:00" & datetimeAK <= "2021-09-30 14:30:00")

CRREL_SALCHA_july <- CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00")


anyNA(CRREL_SALCHA_july, recursive = TRUE)


#plot it 

salcha.plot.1 <- CRREL_SALCHA %>% 
filter(datetimeAK >= "2021-07-01 00:00:00") %>% filter(datetimeAK <= "2021-07-31 00:00:00") %>% 
  mutate(DO.pctsat = 100 * (DO.obs / DO.sat.modeled)) %>%
  select(solar.time, starts_with('DO')) %>%
  gather(type, DO.value, starts_with('DO')) %>%
  mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
  ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() + 
  facet_grid(units ~ ., scale='free_y') + theme_bw() +
  scale_color_discrete('variable') + labs(title = "Salcha ODO, 2021")

labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', Light_umol='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
salcha.plot.2 <- CRREL_SALCHA %>% 
filter(datetimeAK >= "2021-07-01 00:00:00") %>% filter(datetimeAK <= "2021-07-31 00:00:00") %>% 

  select(solar.time, depth, temp.water, Light_umol, discharge) %>%
  gather(type, value, depth, temp.water, Light_umol, discharge) %>%
  mutate(
    type=ordered(type, levels=c('depth','temp.water','Light_umol','discharge', 'air.pressure.mbar')),
    units=ordered(labels[type], unname(labels))) %>%
  ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() + 
  facet_grid(units ~ ., scale='free_y') + theme_bw() +
  scale_color_discrete('variable')

pdf(file = here("Plots", "salcha.2021.pdf"), height= 8.5)

ggarrange(salcha.plot.1, salcha.plot.2, ncol = 1, nrow = 2)
dev.off()


# Diagnise More Issues with DO.sat

Salcha.exo.2021 <- read.csv(file=file.path("C:/Users/jacob/OneDrive - University of Alaska/GitHub/Salcha/EXO_processed/SALCHA_EXO_int.2021.csv"))

Salcha.exo.2021$datetimeAK <- as.POSIXct(Salcha.exo.2021$datetimeAK)


Salcha.exo.2021 <- Salcha.exo.2021 %>% select(datetimeAK, ODO.Psat.mn.adj)

figureTest <- full_join(Salcha.exo.2021,CRREL_SALCHA, by = "datetimeAK")

figureTest$ODO.Psat.mn.adj <-  na_kalman(figureTest$ODO.Psat.mn.adj, type = "level")

figureTest$DO.pctsat = 100 * (figureTest$DO.obs / figureTest$DO.sat.modeled)

figureTest %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.pctsat), colour= "red") + geom_line(aes(y = ODO.Psat.mn.adj), colour = 'blue')+ labs(colour="Datasets")


#Try calculating DO sat from the EXO

CRREL_SALCHA <- full_join(CRREL_SALCHA, Salcha.exo.2021, by = "datetimeAK")

CRREL_SALCHA$psat.fill.test <- na_kalman(CRREL_SALCHA$ODO.Psat.mn.adj, type = "level")


# DO SAT CALCS Summary
CRREL_SALCHA$DO.sat.EXO = CRREL_SALCHA$DO.obs /(CRREL_SALCHA$psat.fill.test/100)


CRREL_SALCHA$DO.sat.VAUL_to_Salcha <- calc_DO_sat(CRREL_SALCHA$temp.water, CRREL_SALCHA$salcha.air.pressure.mbar)

CRREL_SALCHA$DO.sat.EAFB <- calc_DO_sat(CRREL_SALCHA$temp.water, CRREL_SALCHA$air.pressure.filled.mbar.eafb.elevation)


CRREL_SALCHA$air.pressure.modeled <- calc_air_pressure(elevation = 196)

CRREL_SALCHA$DO.sat.Elevation <- calc_DO_sat(CRREL_SALCHA$temp.water, CRREL_SALCHA$air.pressure.modeled)


################
#import points manually from folder
do_salcha_cal_pressure <- read.csv(here("do.salcha.cal.pressure.csv"))

names(do_salcha_cal_pressure)[1]= c("datetimeAK")

do_salcha_cal_pressure$datetimeAK <- as.POSIXct(mdy_hm(do_salcha_cal_pressure$datetimeAK), tz = "America/Anchorage")

do_salcha_cal_pressure$datetimeAK <- force_tz(do_salcha_cal_pressure$datetimeAK, tz = "America/Anchorage")

str(do_salcha_cal_pressure)

do_salcha_cal_pressure <- data.frame(do_salcha_cal_pressure)

do_salcha_cal_pressure$Pressure.mbar.cal.points <- as.numeric(do_salcha_cal_pressure$PressureMMHG)/ 0.75006157584566


testmerge44 <- full_join(CRREL_SALCHA,do_salcha_cal_pressure, by = "datetimeAK")




testmerge44 %>% filter(datetimeAK >= "2021-05-18 00:00:00" & datetimeAK <= "2021-06-30 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=air.pressure.filled.mbar.eafb.elevation, colour= "EAFB Pressure")) + labs(colour="Datasets", y = "DO (mg/L)") + geom_point(aes(y=Pressure.mbar.cal.points, colour= "Calibration Points"))


#################

anyNA(testmerge44, recursive = TRUE)
anyNA(CRREL_SALCHA, recursive = TRUE)

CRREL_SALCHA <- CRREL_SALCHA %>% filter(datetimeAK <="2021-09-30 14:30:00")




CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-07-30 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.sat.EAFB, colour= "EAFB")) + geom_line(aes(y = DO.sat.VAUL_to_Salcha, colour = 'VAUL Corrected for Salcha')) + geom_line(aes(y = DO.sat.EXO, colour = 'EXO')) + geom_line(aes(y = DO.sat.Elevation, colour = 'Elevation Only BP'))+
  labs(colour="Datasets", y = "DO.sat (mg/L)") 


CRREL_SALCHA %>% filter(datetimeAK >= "2021-05-18 00:00:00" & datetimeAK <= "2021-05-30 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=air.pressure.filled.mbar.eafb.elevation, colour= "EAFB Pressure")) + labs(colour="Datasets", y = "DO (mg/L)")

# CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.sat), colour= "red") + geom_line(aes(y = DO.sat.calced), colour = 'blue')+ labs(colour="Datasets")



# CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.sat), colour= "red") + geom_line(aes(y = DO.sat.calced), colour = 'blue')+geom_line(aes(y = DO.obs), colour = 'green') + labs(colour="Datasets")


# CRREL_SALCHA$pressure.air.mmHg <- CRREL_SALCHA$pressure.air.mbar / 1.3332239
# 
# CRREL_SALCHA$ODO.Psat.new <- CRREL_SALCHA$ODO.Psat.mn / 754.0 * CRREL_SALCHA$pressure.air.mmHg
# 
# 
# 

# CRREL_SALCHA$ODO.Psat.new.filled <- na_kalman(CRREL_SALCHA$ODO.Psat.new, type = "level")

# 
# 
# 
# CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=ODO.Psat.new), colour= "red")


# CRREL_SALCHA %>% filter(datetimeAK >= "2021-07-01 00:00:00" & datetimeAK <= "2021-08-01 00:00:00" ) %>% ggplot(aes(x=solar.time)) + geom_line(aes(y=DO.sat), colour= "red") + geom_line(aes(y = DO.sat2), colour = 'blue')+ labs(colour="Datasets")


#Use EXO DO sat calc
final.salcha.DT <- (CRREL_SALCHA) %>%
  select(discharge, Light_umol, temp.water, DO.sat.EXO,DO.obs,depth,solar.time)

final.salcha.DT <- final.salcha.DT %>% rename(DO.sat = DO.sat.EXO)

anyNA(final.salcha.DT, recursive = TRUE)

final.salcha.DT <- final.salcha.DT %>% rename(light = Light_umol)


# final.salcha.DT <- na.omit(final.salcha.DT)

str(final.salcha.DT)




# write.csv(final.salcha.DT, here("UAF-Metabolism", "outputs", "correctedSalchaDT.csv"))


final.salcha.DT <- final.salcha.DT %>% filter(as.character(solar.time) <= "2021-09-27 14:13:54")

anyNA(final.salcha.DT, recursive = TRUE)
lapply(final.salcha.DT, summary)

final.salcha.DT$solar.time <- as.POSIXct(final.salcha.DT$solar.time)

str(final.salcha.DT)


write.csv(final.salcha.DT, here("outputs", "salcha.comb.2021.readyforMetab.new.clean.csv"))

```

#Metab 2021
```{r}

bayes_name <- mm_name(type='bayes', pool_K600='binned', err_obs_iid=TRUE, err_proc_iid=TRUE)
bayes_name_AppEtAL <- "b_Kb_oipi_tr_plrckm.stan"
bayes_specs <- specs(bayes_name, 
                     burnin_steps=9000, saved_steps=5000, n_cores=8, n_chains = 4, GPP_daily_lower = 0, ER_daily_upper = 0
)

```

Model Run
```{r fig.width=8, fig.height=10}

data.salcha.mm.all <- read.csv(here("outputs", "salcha.comb.2021.readyforMetab.new.clean.csv"))

data.salcha.mm.all <- data.salcha.mm.all %>% filter(as.character(solar.time) >= "2021-09-15 04:13:54")

#Cut out bad day with storm / bad DO fits
data.salcha.mm.all <- data.salcha.mm.all %>%
  mutate(across(c(DO.obs),
                ~ifelse(as.character(solar.time) >= "2021-06-19 04:13:54" & as.character(solar.time) < "2021-06-20 04:13:54", NA, .)))

data.salcha.mm.all <- data.salcha.mm.all %>%
  mutate(across(c(DO.obs),
                ~ifelse(as.character(solar.time) >= "2021-05-21 04:13:54" & as.character(solar.time) < "2021-05-22 04:13:54", NA, .)))


# data.salcha.mm.all <- data.salcha.mm.all %>%  rename(DO.sat = DO.sat.EXO)
data.salcha.mm.all$solar.time <- as.POSIXct(data.salcha.mm.all$solar.time, tz = "UTC")
data.salcha.mm.all <- na.omit(data.salcha.mm.all) %>% select(solar.time, DO.obs, DO.sat, light, discharge, depth, temp.water)

startTime <- as.POSIXct(Sys.time())
mm.test.salcha <- metab(bayes_specs, data=data.salcha.mm.all)
endTime <- as.POSIXct(Sys.time())
# 
difftime(endTime, startTime)
save(mm.test.salcha, file = here("Outputs", "salcha.2019.2.1.new.RData"))
# 
fit.salcha <- get_fit(mm.test.salcha)
fit.daily <- fit.salcha$daily
write.csv(fit.daily, here("outputs", "salcha.2019.2.1.new.full.csv"))

```

#Plot Input Data

```{r fig.width = 13, fig.height=7}
model_data <- get_data(mm.test.salcha)
write.csv(model_data, here("outputs", "salcha.2019.2.1.new.model_data.csv"))

plot_DO_preds(mm.test.salcha)
```

```{r fig.width = 20, fig.height=10}

light.fig <- ggplot(data=model_data, aes(x=solar.time, y=light)) + geom_point(color = "chartreuse4") +theme(text = element_text(size=20))
q.fig<- ggplot(data=model_data, aes(x=solar.time, y=discharge)) + geom_point(color = "darksalmon")+theme(text = element_text(size=20))
temp.fig<- ggplot(data=model_data, aes(x=solar.time, y=temp.water)) + geom_point(color = "turquoise4")+theme(text = element_text(size=20))
depth.fig<- ggplot(data=model_data, aes(x=solar.time, y=depth)) + geom_point(color = "maroon")+theme(text = element_text(size=20))

library(grid)
grid.newpage()
grid.draw(rbind(ggplotGrob(light.fig), ggplotGrob(q.fig),ggplotGrob(depth.fig), ggplotGrob(temp.fig)))

```





```{r fig.width = 10, fig.height=8}
gpp <- ggplot(data=fit.salcha$daily, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")
gpp

#save with no axis for combined plot
gpp <- ggplot(data=fit.salcha$daily, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
```

```{r fig.width = 10, fig.height=8}
er <- ggplot(data = fit.daily, aes(x = date)) +geom_point(aes(y = ER_mean), color = "firebrick3") + geom_errorbar(aes(ymin=ER_mean-ER_sd, ymax=ER_mean+ER_sd), width=.2, position=position_dodge(0.05), color = "firebrick3")
er
```

```{r fig.width = 10, fig.height=8}
k600 <- ggplot(data=fit.salcha$daily, aes(x=date, y=K600_daily_mean)) + geom_point(color = "orange") + geom_errorbar(aes(ymin=K600_daily_mean-K600_daily_sd, ymax=K600_daily_mean+K600_daily_sd), width=.2, position=position_dodge(0.05), color = "orange")
k600
#save with no axis for combined plot
k600 <- ggplot(data=fit.salcha$daily, aes(x=date, y=K600_daily_mean)) + geom_point(color = "orange") + geom_errorbar(aes(ymin=K600_daily_mean-K600_daily_sd, ymax=K600_daily_mean+K600_daily_sd), width=.2, position=position_dodge(0.05), color = "orange") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
```

```{r fig.width = 10, fig.height=8}
rhat <- ggplot(data=fit.salcha$daily, aes(x=date)) + geom_point(aes(y=GPP_Rhat, colour = "GPP")) + geom_point(aes(y=as.numeric(ER_Rhat), colour = "ER")) + geom_point(aes(y=K600_daily_Rhat, colour = "K600")) +
  labs(y = "RHAT") + theme(legend.position="top") + geom_hline(yintercept=1.01, color = "dark blue")+ geom_hline(yintercept=1.1, color = "dark red", linetype = "dashed")
rhat

rhat <- ggplot(data=fit.salcha$daily, aes(x=date)) + geom_point(aes(y=GPP_Rhat, colour = "GPP")) + geom_point(aes(y=as.numeric(ER_Rhat), colour = "ER")) + geom_point(aes(y=K600_daily_Rhat, colour = "K600")) +
  labs(y = "RHAT") + theme(legend.position="top") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ geom_hline(yintercept=1.01, color = "dark blue")+ geom_hline(yintercept=1.1, color = "dark red", linetype = "dashed")
```

```{r fig.width = 10, fig.height=8}
ggplot(data=fit.daily, aes(x=GPP_mean, y=ER_mean)) + geom_point()+ stat_poly_line() + stat_poly_eq() 
```

```{r fig.width = 10, fig.height=8}
ggplot(data=fit.daily, aes(x=GPP_mean, y=K600_daily_mean)) + geom_point()+ stat_poly_line() + stat_poly_eq() 
```

```{r fig.width = 10, fig.height=8}
ggplot(data=fit.daily, aes(x=ER_mean, y=K600_daily_mean)) + geom_point()+ stat_poly_line() + stat_poly_eq()
```

```{r fig.width = 10, fig.height=10}
mcmc <- get_mcmc(mm.test.salcha)
k600mcmc <- rstan::traceplot(mcmc, pars='K600_daily', nrow=7)
k600mcmc
```


```{r fig.width = 10, fig.height=10}
gppmcmc <- rstan::traceplot(mcmc, pars='GPP_daily', nrow=7)
gppmcmc
```

```{r fig.width = 10, fig.height=10}
ermcmc <- rstan::traceplot(mcmc, pars='ER_daily', nrow=7)
ermcmc
```


#DO r2

```{r fig.width = 10, fig.height=8}
salcha.DO.pred <- predict_DO(mm.test.salcha)
salcha.DO.pred <- na.omit(salcha.DO.pred)
lm(DO.obs~ DO.mod, data = salcha.DO.pred)
salcha.DO.pred$SM.date <- as.Date(salcha.DO.pred$solar.time - 4*60*60)
salcha.DO.pred$SM.date <- as.factor(salcha.DO.pred$SM.date)
fit_model <- function(x, y) summary(lm(x ~ y))$adj.r.squared
test.run <- salcha.DO.pred %>% group_by(SM.date) %>% summarise(adj.R2 = fit_model(DO.obs,DO.mod))
salcha.DO.pred <- full_join(salcha.DO.pred, test.run)
rsq <-  summary(lm(salcha.DO.pred$DO.mod~salcha.DO.pred$DO.obs))$r.squared

p1 <- ggplot(salcha.DO.pred, aes(x = solar.time)) + geom_point(aes(y=DO.obs, colour = "Observed DO"), color = "darkcyan") + geom_line(aes(y = DO.mod, colour= "Modeled DO"), color = "blue4") + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() ) + labs(colour="Green", y = "DO (mg/L)") +  theme(legend.position="none") + ggtitle("Observed (points) and Modeled (lines)")
p2 <- ggplot(salcha.DO.pred, aes(x = solar.time)) + geom_point(aes(y=adj.R2))
q.fig <- ggplot(data = data.salcha.mm.all, aes(x = solar.time)) +geom_point(aes(y=discharge))

grid.newpage()
grid.draw(rbind(ggplotGrob(p1), ggplotGrob(p2)))
```             

```{r fig.width = 10, fig.height=8}
grid.newpage()
grid.draw(rbind(ggplotGrob(p1), ggplotGrob(p2), ggplotGrob(rhat),ggplotGrob(q.fig), ggplotGrob(k600),ggplotGrob(gpp), ggplotGrob(er)))

```







<!-- ``` {r} -->
<!-- test <- get_fit(mm.test.salcha.new) -->

<!-- test -->


<!-- testkbin <- test$KQ_binned -->


<!-- view(test$overall) -->
<!-- view(test$daily) -->


<!-- dev.off() -->
<!-- dev.set(dev.next()) -->

<!-- mcmc3 <- get_mcmc(mm.test.salcha.new) -->
<!-- output79 <- rstan::traceplot(mcmc3, pars = "K600_daily" , nrow=3) -->
<!-- output79 -->

<!-- output78 <- rstan::traceplot(mcmc3, pars = "GPP_daily" , nrow=3) -->
<!-- output78 -->

<!-- output75 <- rstan::traceplot(mcmc3, pars = "ER_daily" , nrow=3) -->
<!-- output75 -->


<!-- test9 <- get_params(mm.test.salcha.new) -->


<!-- write.csv(test9, here("burnin5000_2021_salcha.csv")) -->

<!-- write.csv(test$daily, here("outputs", "burnin5000_2021_salcha_metrics.csv")) -->


<!-- ggplot(data=test9, aes(x=GPP.daily, y=ER.daily)) + geom_point() -->
<!-- ggplot(data=test9, aes(x=GPP.daily, y=K600.daily)) + geom_point() -->
<!-- ggplot(data=test9, aes(x=ER.daily, y=K600.daily)) + geom_point() -->



<!-- # # defining start date -->
<!-- # start_date <- ymd_hms("2021/07/01 00:00:00") -->
<!-- #  -->
<!-- # # defining end date -->
<!-- # end_date <- ymd_hms("2021/08/01 00:00:00") -->
<!-- #  -->
<!-- # # generating range of dates -->
<!-- # range <- seq(start_date, end_date,"days") -->







<!-- ``` -->