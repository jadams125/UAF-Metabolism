"0","#Light"
"0",""
"0","CRREL <- read.csv(""C:/Users/jacob/OneDrive - University of Alaska/GitHub/Metabolism-UAF/Crell_met_PAR.csv"", skip = 5)"
"0","# CRREL <- read_csv(here(""Crell_met_PAR.csv""), skip = 5)"
"0",""
"0","CRREL$datetimeAK <- strptime(CRREL$Time, '%m/%d/%Y %H:%M')"
"0",""
"0","CRREL$datetimeAK <- as.POSIXct(as.character(CRREL$datetimeAK))"
"0",""
"0","CRREL <- CRREL %>% rename(ParWm2 = CPCRW.CRREL.Main.Met.Station..PAR_Den_AVG.W.m2.)"
"0",""
"0","Salcha.exo.2021$datetimeAK <- as.POSIXct(Salcha.exo.2021$datetimeAK)"
"0",""
"0","ts_2021$datetimeAK <- as.POSIXct(ts_2021$datetimeAK, tz = ""America/Anchorage"")"
"0",""
"0",""
"0","CRREL_SALCHA1 <- full_join(ts_2021, CRREL, by = ""datetimeAK"")"
"0",""
"0",""
"0","write.csv(CRREL_SALCHA1, ""C:/Users/jacob/OneDrive - University of Alaska/GitHub/Metabolism-UAF/Crell_met_PAR2.csv"")"
"0",""
"0",""
"0","setwd(""C:/Users/jacob/OneDrive - University of Alaska/GitHub/"")"
"0",""
"0","light.list <- list.files(path=""Metabolism-UAF"", "
"0","                         recursive=F, "
"0","                         pattern=""Crell_met_PAR2"", "
"0","                         full.names=TRUE)"
"0",""
"0","light.cl <- lapply(light.list, "
"0","                   read.csv, "
"0","                   stringsAsFactors=FALSE, "
"0","                   header = TRUE)"
"0",""
"0",""
"0","# Format datetime"
"0","light.cl <- lapply(light.cl, function(x) {"
"0","  mutate(x, datetimeAK = as.POSIXct(datetimeAK, format = ""%Y-%m-%d %H:%M:%S"", tz= ""America/Anchorage""))"
"0","})"
"0",""
"0",""
"0","### Fill gaps in Light ###"
"0","anyNA(light.cl, recursive = TRUE)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","lapply(light.cl, summary)"
"1","[[1]]
"
"1",""
"1","      X.1       "
"1","       X        "
"1","   datetimeAK                 "
"1","
"
"1"," Min.   :    1  "
"1"," Min.   :    1  "
"1"," Min.   :2020-09-16 00:00:00  "
"1","
"
"1"," 1st Qu.: 6809  "
"1"," 1st Qu.: 3244  "
"1"," 1st Qu.:2021-05-28 07:15:00  "
"1","
"
"1"," Median :13617  "
"1"," Median : 6486  "
"1"," Median :2021-08-07 05:15:00  "
"1","
"
"1"," Mean   :13617  "
"1"," Mean   : 6486  "
"1"," Mean   :2021-08-27 21:50:08  "
"1","
"
"1"," 3rd Qu.:20425  "
"1"," 3rd Qu.: 9728  "
"1"," 3rd Qu.:2021-12-05 17:00:00  "
"1","
"
"1"," Max.   :27233  "
"1"," Max.   :12971  "
"1"," Max.   :2022-09-15 10:00:00  "
"1","
"
"1","                "
"1"," NA's   :14262  "
"1","                              "
"1","
"
"1",""
"1","     Time          "
"1"," CPCRW.CRREL.Main.Met.Station..PYR_Total_TOT.N.A."
"1","
"
"1"," Length:27233      "
"1"," Min.   :  0.000                                 "
"1","
"
"1"," Class :character  "
"1"," 1st Qu.:  0.000                                 "
"1","
"
"1"," Mode  :character  "
"1"," Median :  1.115                                 "
"1","
"
"1","                   "
"1"," Mean   : 40.616                                 "
"1","
"
"1","                   "
"1"," 3rd Qu.: 46.445                                 "
"1","
"
"1","                   "
"1"," Max.   :426.000                                 "
"1","
"
"1","                   "
"1"," NA's   :9730                                    "
"1","
"
"1",""
"1","     ParWm2        "
"1","
"
"1"," Min.   :   0.000  "
"1","
"
"1"," 1st Qu.:   0.000  "
"1","
"
"1"," Median :   6.233  "
"1","
"
"1"," Mean   : 165.522  "
"1","
"
"1"," 3rd Qu.: 202.550  "
"1","
"
"1"," Max.   :1629.000  "
"1","
"
"1"," NA's   :9730      "
"1","
"
"1","
"
"0","# Make univariate time series, covert to zoo, then to ts #"
"0","light.only <- lapply(light.cl, '[', (c(""datetimeAK"", ""ParWm2"")))"
"0",""
"0","light.ts <- lapply(light.only, function(x) {read.zoo(x, index.column=1, format=""%Y-%m-%d %H:%M:%S"", tz=""America/Anchorage"")"
"0","})"
"0",""
"0","light.xts <- lapply(light.ts, function(x) {as.xts(x)"
"0","})"
"0",""
"0","# Apply auto.arima (default model in call to na_kalman) and kalman filter (default = smooth) to impute missing values using na.kalman from imputeTS #"
"0","light.int <- lapply(light.xts, function(x) {na_kalman(x)"
"0","})"
"0",""
"0","anyNA(light.int, recursive = TRUE)"
"1","[1]"
"1"," FALSE"
"1","
"
"0","# revert xts to dataframe"
"0","light.ma.int = lapply(light.int, function(x) {data.frame(datetimeAK=time(x), turb.ma.int=as.matrix(x))"
"0","})"
"0",""
"0","light.ma.int <- lapply(light.ma.int, setNames, c(""datetimeAK"", ""ParWm2.int""))"
"0",""
"0",""
"0","# Rejoin to instrument record (EXO.cl)"
"0","EXO.cl.int <- map2(EXO.cl.int, light.ma.int, ~merge(.x, .y, by = ""datetimeAK""))"
"0",""
"0","## Compare instrument record and with imputed turbidity time series"
"0","# to dataframe for compatibility with ggplot"
"0","EXO.cl.int.df <- bind_rows(EXO.cl.int, .id = ""Site"")"
"0",""
"0",""
"0","light.int.pl <- EXO.cl.int.df %>% "
"0","  ggplot(aes(x = datetimeAK, y = ParWm2.int)) +"
"0","  geom_line(color = ""blue"") +"
"0","  #geom_line(color = ""blue"") +"
"0","  # geom_line(aes(x = datetimeAK, y = ParWm2.int), color = ""green"") +"
"0","  # xlim(as.POSIXct(c(""2021-05-01"", ""2021-10-27""))) +"
"0","  facet_wrap(~Site)"
"0",""
"0","light.int.pl"
