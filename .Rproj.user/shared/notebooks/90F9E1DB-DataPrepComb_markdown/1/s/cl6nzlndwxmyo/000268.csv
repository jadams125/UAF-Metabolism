"0","# "
"0","# # Poke:"
"0","# "
"0","# #download flowmeter data"
"0","# WR_19.url <- ""https://drive.google.com/drive/u/1/folders/1bm62_JO1dKrFPyUCz8E88K5q7IHElXPP"""
"0","# WR.19.1 <- drive_get(as_id(WR_19.url))"
"0","# poke.wr19_glist <- drive_ls(WR.19.1, pattern = ""poke_2019_flowmeter_Q_for_R_JAA.csv"")"
"0","# walk(poke.wr19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# poke_WR_19.Data <- read.csv(""poke_2019_flowmeter_Q_for_R_JAA.csv"","
"0","#                             skip = 1, header = TRUE, na.strings=c("""",""NA"",""blank""))"
"0","# "
"0","# poke_WR_19.Data <- poke_WR_19.Data %>% tidyr::fill(Date, .direction = (""down""))"
"0","# "
"0","# poke_WR_19.Data <- poke_WR_19.Data %>% tidyr::fill(Time, .direction = (""down""))"
"0","# "
"0","# "
"0","# poke_WR_19.Data$datetimeAK <- as.POSIXct(paste(poke_WR_19.Data$Date, poke_WR_19.Data$Time), format=""%m/%d/%Y %H:%M"")"
"0","# "
"0","# "
"0","# poke_WR_19.Data <- poke_WR_19.Data %>%"
"0","#   select(Depth..cm., datetimeAK)"
"0","# "
"0","# Poke_depth_19 <- ddply(na.omit(poke_WR_19.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))"
"0","# "
"0","# # poke_wr.lm <- lm(meanDepth~datetimeAK, Poke_depth_19)"
"0","# "
"0","# "
"0","# Poke_depth_19 <- setDT(Poke_depth_19)"
"0","# "
"0","# Poke_depth_19 <- Poke_depth_19 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK)"
"0","# "
"0","# final.Poke.DO.2019 <- setDT(final.Poke.DO.2019)"
"0","# "
"0","# setDT(Poke_depth_19)"
"0","# setDT(final.Poke.DO.2019)"
"0","# "
"0","# final.Poke.DO.2019$datetimeAK1 <- final.Poke.DO.2019$datetimeAK"
"0","# "
"0","# setkey( final.Poke.DO.2019, datetimeAK )"
"0","# setkey( Poke_depth_19, datetimeAK )"
"0","# "
"0","# #WR was taken when EXO out of water. round depth point to nearest in data record"
"0","# rounded.dates_poke19 <- final.Poke.DO.2019[ Poke_depth_19, roll = ""nearest"" ]"
"0","# "
"0","# rounded.dates_poke19 <- rounded.dates_poke19 %>%"
"0","#   dplyr::rename(datetimeAK_old = datetimeAK)"
"0","# rounded.dates_poke19 <- rounded.dates_poke19 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK1)"
"0","# "
"0","# rounded.dates_poke19 <- rounded.dates_poke19 %>%"
"0","#   select(meanDepth, datetimeAK)"
"0","# "
"0","# Poke.2019.DO.Depth <- merge(final.Poke.DO.2019, rounded.dates_poke19, by = ""datetimeAK"", all = TRUE)"
"0","# Poke.2019.DO.Depth$meanDepth1 <- Poke.2019.DO.Depth$meanDepth"
"0","# "
"0","# testmod <- lm(meanDepth ~ datetimeAK, Poke.2019.DO.Depth)"
"0","# "
"0","# summary(testmod)"
"0","# "
"0","# Poke.2019.DO.Depth <- Poke.2019.DO.Depth %>% "
"0","#   mutate(predictedDepth = predict(testmod, .)) %>%"
"0","#   # Replace NA with pred in var1"
"0","#   mutate(meanDepth = ifelse(is.na(meanDepth), predictedDepth, meanDepth))"
"0",""
"0",""
"0","final.Poke.DO.2019 <- final.Poke.DO.2019 %>% filter(datetimeAK < ""2019-10-17 11:45:00"")"
"0",""
"0",""
"0",""
"0",""
"0","### 2020 ###"
"0","# exo.all.2020.url <- ""https://drive.google.com/drive/u/1/folders/1nNKoIdgP-fdCNRGUbGca_zVujF_16QEM"""
"0","# exo.all.2020.prt1 <- drive_get(as_id(exo.all.2020.url))"
"0","# exo.all.2020.glist <- drive_ls(exo.all.2020.prt1, pattern = ""EXO.ALL.csv"")"
"0","# walk(exo.all.2020.glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# exo.all.2020 <- read.csv(""EXO.ALL.csv"",)"
"0",""
"0","poke.exo.2020 <- read_csv(""C:/Users/jadams125/documents/GitHub/DoD_2020/EXO_processed/POKE.EXO.cl.csv"")"
"1","[1mRows: [22m[34m12661[39m [1mColumns: [22m[34m28[39m
"
"1","[36m--[39m [1mColumn specification[22m [36m--------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m   (1): site.ID
[32mdbl[39m  (25): X, fDOM.QSU.mn, fDOM.QSU.SD, ODO.Psat.mn, ODO.Psat.SD, ODO.Ploc.mn, ODO.Ploc.SD, OD...
[34mdttm[39m  (2): min, datetimeAK
"
"1","
[36mi[39m Use `spec()` to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","poke.exo.2020 <- poke.exo.2020 %>%"
"0","  dplyr::rename(ODO.mgL = ODO.mgL.mn.adj, ODO.Psat = ODO.Psat.mn.adj, ODO.Ploc = ODO.Ploc.mn.adj, Temp.C = Temp.C.mn) %>% select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc, site.ID)"
"0",""
"0","poke.exo.2020$datetimeAK <- force_tz(as.POSIXct(poke.exo.2020$datetimeAK), ""America/Anchorage"")"
"0",""
"0","# poke.exo.2020$ODO.mgL <- "
"0","#   "
"0","#   #calc from YSI %Sat to MGL spreadsheet"
"0","#   as.numeric(poke.exo.2020$ODO.Psat) * (0.01* exp("
"0","#     (-862194900000*(1/(poke.exo.2020$Temp.C+273.15))^4+12438000000*(1/(poke.exo.2020$Temp.C+273.15))^3-66423080*(1/(poke.exo.2020$Temp.C+273.15))^2+157570.1*(1/(poke.exo.2020$Temp.C+273.15))-139.344)"
"0","#       -0* (2140.7*(1/(poke.exo.2020$Temp.C+273.15))^2-10.754*(1/(poke.exo.2020$Temp.C+273.15))+0.017674 )))"
"0",""
"0","# "
"0","# poke.exo.2020$datetimeAK <- as.POSIXct(strptime(poke.exo.2020$datetimeAK, ""%m/%e/%y %H:%M""))"
"0",""
"0",""
"0","plot(poke.exo.2020$datetimeAK, poke.exo.2020$ODO.mgL)"
