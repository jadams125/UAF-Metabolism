"0","###### STUART ######"
"0",""
"0","#### 2019 ####"
"0",""
"0","SondeData2019 <- read_csv(""C:/Users/jadams125/documents/GitHub/DoD_2019/processed_sensor_dat/SUNA.EXO.int.corr.csv"")"
"1","[1mRows: [22m[34m76357[39m [1mColumns: [22m[34m60[39m
"
"1","[36m--[39m [1mColumn specification[22m [36m--------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m   (2): site.ID, Site
[32mdbl[39m  (56): fDOM.QSU.mn, fDOM.QSU.SD, ODO.Psat.mn, ODO.Psat.SD, ODO.Ploc.mn, ODO.Ploc.SD, ODO.m...
[34mdttm[39m  (2): datetimeAK, min
"
"1","
[36mi[39m Use `spec()` to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","SondeData2019$datetimeAK <- force_tz(as.POSIXct(SondeData2019$datetimeAK), ""America/Anchorage"")"
"0",""
"0","# Have to rename rows so they dont have ""mean"" in them so it can be combined for three straight years. Data is cleaned."
"0",""
"0","SondeData2019.renamed <- SondeData2019 %>%"
"0","  dplyr::rename(ODO.mgL = ODO.mgL.mn, ODO.Psat = ODO.Psat.mn, ODO.Ploc = ODO.Ploc.mn, Temp.C = Temp.C.mn) %>% select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc, site.ID)"
"0",""
"0",""
"0","STRT_EXO_cl.2019.renamed <- SondeData2019.renamed %>% filter(site.ID == ""STRT"")"
"0",""
"0",""
"0","# "
"0","# "
"0","# ########## DEPTH ############ "
"0","# "
"0","# "
"0","# # Strt:"
"0","# "
"0","# #download flowmeter data"
"0","# WR_19.url <- ""https://drive.google.com/drive/u/1/folders/1bm62_JO1dKrFPyUCz8E88K5q7IHElXPP"""
"0","# WR.19.1 <- drive_get(as_id(WR_19.url))"
"0","# strt.wr19_glist <- drive_ls(WR.19.1, pattern = ""STRT_2019_flowmeter_Q_for_R_JAA.csv"")"
"0","# walk(strt.wr19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# strt_WR_19.Data <- read.csv(""STRT_2019_flowmeter_Q_for_R_JAA.csv"","
"0","#                             skip = 0, header = TRUE, na.strings=c("""",""NA"",""blank"",""can't read note here, image 190807_2""))"
"0","# "
"0","# strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Date, .direction = (""down""))"
"0","# "
"0","# strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Time, .direction = (""down""))"
"0","# "
"0","# "
"0","# strt_WR_19.Data$datetimeAK <- as.POSIXct(paste(strt_WR_19.Data$Date, strt_WR_19.Data$Time), format=""%m/%d/%Y %H:%M"")"
"0","# "
"0","# "
"0","# strt_WR_19.Data <- strt_WR_19.Data %>%"
"0","#   select(Depth..cm., datetimeAK)"
"0","# "
"0","# Strt_depth_19 <- ddply(na.omit(strt_WR_19.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))"
"0","# "
"0","# # strt_wr.lm <- lm(meanDepth~datetimeAK, Strt_depth_19)"
"0","# "
"0","# "
"0","# Strt_depth_19 <- setDT(Strt_depth_19)"
"0","# "
"0","# Strt_depth_19 <- Strt_depth_19 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK)"
"0","# "
"0","# STRT_EXO_cl.2019.renamed <- setDT(STRT_EXO_cl.2019.renamed)"
"0","# "
"0","# setDT(Strt_depth_19)"
"0","# setDT(STRT_EXO_cl.2019.renamed)"
"0","# "
"0","# STRT_EXO_cl.2019.renamed$datetimeAK1 <- STRT_EXO_cl.2019.renamed$datetimeAK"
"0","# "
"0","# setkey( STRT_EXO_cl.2019.renamed, datetimeAK )"
"0","# setkey( Strt_depth_19, datetimeAK )"
"0","# "
"0","# #WR was taken when EXO out of water. round depth point to nearest in data record"
"0","# rounded.dates_strt19 <- STRT_EXO_cl.2019.renamed[ Strt_depth_19, roll = ""nearest"" ]"
"0","# "
"0","# rounded.dates_strt19 <- rounded.dates_strt19 %>%"
"0","#   dplyr::rename(datetimeAK_old = datetimeAK)"
"0","# rounded.dates_strt19 <- rounded.dates_strt19 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK1)"
"0","# "
"0","# rounded.dates_strt19 <- rounded.dates_strt19 %>%"
"0","#   select(meanDepth, datetimeAK)"
"0","# "
"0","# Strt.2019.DO.Depth <- merge(STRT_EXO_cl.2019.renamed, rounded.dates_strt19, by = ""datetimeAK"", all = TRUE)"
"0","# Strt.2019.DO.Depth$meanDepth1 <- Strt.2019.DO.Depth$meanDepth"
"0","# "
"0","# strt19mod <- lm(meanDepth ~ datetimeAK, Strt.2019.DO.Depth)"
"0","# "
"0","# summary(strt19mod)"
"0","# "
"0","# Strt.2019.DO.Depth <- Strt.2019.DO.Depth %>% "
"0","#   mutate(predictedDepth = predict(strt19mod, .)) %>%"
"0","#   # Replace NA with pred in var1"
"0","#   mutate(meanDepth = ifelse(is.na(meanDepth), predictedDepth, meanDepth))"
"0",""
"0",""
"0","#USE TELEM FILLED DATA TO CALCULATE MG/L "
"0",""
"0",""
"0","#calc from YSI %Sat to MGL spreadsheet"
"0",""
"0","# # DO data collected as concentrations can be "
"0","# converted to percent saturation using temperature and salinity data collected in conjunction with "
"0","# the DO measurements using the equations as provided in APHA, 1989:"
"0",""
"0",""
"0","# DOsat = (Exp((-139.34411 + (157570.1/Temp) - (66423080/Temp2"
"0","# ) + (12438000000/Temp3"
"0","# ) - "
"0","#   (862194900000/Temp4"
"0","#   )) - (Sal * (0.017674-(10.754/Temp)+(2140.7/Temp2"
"0","#   )))))"
"0","# % DO = (DOmeasure/ DOsat)*100 "
"0",""
"0",""
"0","# Where:"
"0","#   DOsat = DO concentration in mg/L at 100 % saturation, "
"0","# Temp = water temperature in Â°K (Â°C + 273.15 = Â°K) "
"0","# DOmeasure = Measured DO concentration in mg/L."
"0","# Sal = Salinity in part per thousand (ppt)"
"0",""
"0","#Constants: "
"0","# 862194900000"
"0","# 12438000000"
"0","# 66423080"
"0","# 157570.1"
"0","# 139.344"
"0","#"
"0",""
"0","#We change this according to how YSI does it in the EXO"
"0",""
"0",""
"0",""
"0","#in this case, we are finding the DO mg/L per percent saturation, and multiplying it by our percent sat from telem. This percent sat accounts for pressure as well I believe. "
"0",""
"0",""
"0","STRT_EXO_cl.2019.renamed$ODO.mgL.Calc <-as.numeric(STRT_EXO_cl.2019.renamed$ODO.Psat) * "
"0","  #DO mg/L per sat"
"0","  (0.01* exp("
"0","    #p1"
"0","    (-862194900000*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))^4+12438000000*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))^3-66423080*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))^2+157570.1*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))-139.344)"
"0","    #salinity"
"0","    -0* "
"0","      #p2"
"0","      (2140.7*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))^2-10.754*(1/(STRT_EXO_cl.2019.renamed$Temp.C+273.15))+0.017674 )))"
"0",""
"0",""
"0","#fill missing rows with calculated MGL"
"0","STRT_EXO_cl.2019.renamed <- STRT_EXO_cl.2019.renamed %>% "
"0","  mutate(ODO.mgL = coalesce(ODO.mgL,ODO.mgL.Calc))"
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0","#### 2020 ####"
"0",""
"0",""
"0","#### 2020 ####"
"0","# exo.all.2020.url <- ""https://drive.google.com/drive/u/1/folders/1nNKoIdgP-fdCNRGUbGca_zVujF_16QEM"""
"0","# exo.all.2020.prt1 <- drive_get(as_id(exo.all.2020.url))"
"0","# exo.all.2020.glist <- drive_ls(exo.all.2020.prt1, pattern = ""EXO.ALL.csv"")"
"0","# walk(exo.all.2020.glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# exo.all.2020 <- read.csv(""EXO.ALL.csv"",)"
"0",""
"0","strt.exo.2020 <- read_csv(""C:/Users/jadams125/documents/GitHub/DoD_2020/EXO_processed/STRT.EXO.cl.csv"")"
"1","[1mRows: [22m[34m11306[39m [1mColumns: [22m[34m28[39m
"
"1","[36m--[39m [1mColumn specification[22m [36m--------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m   (1): site.ID
[32mdbl[39m  (25): X, fDOM.QSU.mn, fDOM.QSU.SD, ODO.Psat.mn, ODO.Psat.SD, ODO.Ploc.mn, ODO.Ploc.SD, OD...
[34mdttm[39m  (2): min, datetimeAK
"
"1","
[36mi[39m Use `spec()` to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","strt.exo.2020 <- strt.exo.2020 %>%"
"0","  dplyr::rename(ODO.mgL = ODO.mgL.mn.adj, ODO.Psat = ODO.Psat.mn.adj, ODO.Ploc = ODO.Ploc.mn.adj, Temp.C = Temp.C.mn) %>% select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc, site.ID)"
"0",""
"0","strt.exo.2020$datetimeAK <- force_tz(as.POSIXct(strt.exo.2020$datetimeAK), ""America/Anchorage"")"
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0",""
"0","# strt.exo.2020 <- exo.all.2020 %>% filter(site.ID == ""STRT"")"
"0","# "
"0","# #convert Bursts to means"
"0","# "
"0","# "
"0","# "
"0","# strt.exo.2020$datetimeAK <- as.POSIXct(strptime(strt.exo.2020$datetimeAK, ""%m/%e/%y %H:%M""))"
"0","# "
"0","# "
"0","# "
"0","# strt.exo.2020$Temp.C <- as.numeric(strt.exo.2020$Temp.C)"
"0","# strt.exo.2020$ODO.Psat <- as.numeric(strt.exo.2020$ODO.Psat)"
"0","# strt.exo.2020$ODO.mgL <- as.numeric(strt.exo.2020$ODO.mgL)"
"0","# strt.exo.2020$ODO.Ploc <- as.numeric(strt.exo.2020$ODO.Ploc)"
"0","# "
"0","# "
"0","# "
"0","# #mean bursts"
"0","# STRTmean2020odoMGL <- aggregate( ODO.mgL ~ datetimeAK, strt.exo.2020, mean)"
"0","# STRTmean2020odoPSAT <- aggregate( ODO.Psat ~ datetimeAK, strt.exo.2020, mean)"
"0","# STRTmean2020odoPLOC <- aggregate( ODO.Ploc ~ datetimeAK, strt.exo.2020, mean)"
"0","# STRTmean2020odoTEMPC <- aggregate( Temp.C ~ datetimeAK, strt.exo.2020, mean)"
"0","# "
"0","# STRTmeans2020ODO <- plyr::join(STRTmean2020odoMGL, STRTmean2020odoPSAT, by = ""datetimeAK"")"
"0","# STRTmeans2020ODO <- plyr::join(STRTmeans2020ODO, STRTmean2020odoPLOC, by = ""datetimeAK"")"
"0","# STRTmeans2020ODO <- plyr::join(STRTmeans2020ODO, STRTmean2020odoTEMPC, by = ""datetimeAK"")"
"0",""
"0",""
"0",""
"0","########## DEPTH ############ "
"0",""
"0","# "
"0","# # Strt:"
"0","# "
"0","# #download flowmeter data"
"0","# WR_20.url <- ""https://drive.google.com/drive/u/1/folders/1x_E4gaPvjRLDcrM8lN2ao4_o0bzdMBrb"""
"0","# WR.20.1 <- drive_get(as_id(WR_20.url))"
"0","# strt.wr20_glist <- drive_ls(WR.20.1, pattern = ""R_Flowmeter Q calculation_STRT_for_R_JAA.csv"")"
"0","# walk(strt.wr20_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# strt_WR_20.Data <- read.csv(""R_Flowmeter Q calculation_STRT_for_R_JAA.csv"","
"0","#                             skip = 0, header = TRUE, na.strings=c("""",""NA"",""blank""))"
"0","# "
"0","# "
"0","# strt_WR_20.Data <- strt_WR_20.Data %>%"
"0","#   dplyr::rename(Date = Ã¯..Date)"
"0","# "
"0","# strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Date, .direction = (""down""))"
"0","# "
"0","# strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Time, .direction = (""down""))"
"0","# "
"0","# "
"0","# strt_WR_20.Data$datetimeAK <- as.POSIXct(paste(strt_WR_20.Data$Date, strt_WR_20.Data$Time), format=""%y%m%d %H:%M"")"
"0","# "
"0","# "
"0","# strt_WR_20.Data <- strt_WR_20.Data %>%"
"0","#   select(Depth..cm., datetimeAK)"
"0","# "
"0","# Strt_depth_20 <- ddply(na.omit(strt_WR_20.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))"
"0","# "
"0","# # strt_wr.lm <- lm(meanDepth~datetimeAK, Strt_depth_20)"
"0","# "
"0","# "
"0","# Strt_depth_20 <- setDT(Strt_depth_20)"
"0","# "
"0","# Strt_depth_20 <- Strt_depth_20 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK)"
"0","# "
"0","# STRTmeans2020ODO <- setDT(STRTmeans2020ODO)"
"0","# "
"0","# setDT(Strt_depth_20)"
"0","# setDT(STRTmeans2020ODO)"
"0","# "
"0","# STRTmeans2020ODO$datetimeAK1 <- STRTmeans2020ODO$datetimeAK"
"0","# "
"0","# setkey( STRTmeans2020ODO, datetimeAK )"
"0","# setkey( Strt_depth_20, datetimeAK )"
"0","# "
"0","# #WR was taken when EXO out of water. round depth point to nearest in data record"
"0","# rounded.dates_strt20 <- STRTmeans2020ODO[ Strt_depth_20, roll = ""nearest"" ]"
"0","# "
"0","# rounded.dates_strt20 <- rounded.dates_strt20 %>%"
"0","#   dplyr::rename(datetimeAK_old = datetimeAK)"
"0","# rounded.dates_strt20 <- rounded.dates_strt20 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK1)"
"0","# "
"0","# rounded.dates_strt20 <- rounded.dates_strt20 %>%"
"0","#   select(meanDepth, datetimeAK)"
"0","# "
"0","# Strt.2020.DO.Depth <- merge(STRTmeans2020ODO, rounded.dates_strt20, by = ""datetimeAK"", all = TRUE)"
"0","# Strt.2020.DO.Depth$meanDepth1 <- Strt.2020.DO.Depth$meanDepth"
"0","# "
"0","# strt20mod <- lm(meanDepth ~ datetimeAK, Strt.2020.DO.Depth)"
"0","# "
"0","# summary(strt20mod)"
"0","# "
"0","# Strt.2020.DO.Depth <- Strt.2020.DO.Depth %>% "
"0","#   mutate(predictedDepth = predict(strt20mod, .)) %>%"
"0","#   # Replace NA with pred in var1"
"0","#   mutate(meanDepth = ifelse(is.na(meanDepth), predictedDepth, meanDepth))"
"0",""
"0",""
"0",""
"0",""
"0","#### 2021 ####"
"0","strt.exo.2021 <- exo.processed.2021 %>% filter(site.ID == ""STRT"")"
"0",""
"0",""
"0","strt.exo.2021$datetimeAK <- lubridate::round_date(strt.exo.2021$datetimeAK, ""15 minutes"")"
"0","strt.exo.2021$datetimeAK <- force_tz(strt.exo.2021$datetimeAK, ""America/Anchorage"")"
"0",""
"0","strt.exo.2021$Temp.C <- as.numeric(strt.exo.2021$Temp.C)"
"0","strt.exo.2021$ODO.Psat <- as.numeric(strt.exo.2021$ODO.Psat)"
"0","strt.exo.2021$ODO.mgL <- as.numeric(strt.exo.2021$ODO.mgL)"
"0","strt.exo.2021$ODO.Ploc <- as.numeric(strt.exo.2021$ODO.Ploc)"
"0",""
"0",""
"0",""
"0","#mean bursts"
"0","STRTmean2021odoMGL <- aggregate( ODO.mgL ~ datetimeAK, strt.exo.2021, mean)"
"0","STRTmean2021odoPSAT <- aggregate( ODO.Psat ~ datetimeAK, strt.exo.2021, mean)"
"0","STRTmean2021odoPLOC <- aggregate( ODO.Ploc ~ datetimeAK, strt.exo.2021, mean)"
"0","STRTmean2021odoTEMPC <- aggregate( Temp.C ~ datetimeAK, strt.exo.2021, mean)"
"0",""
"0","STRTmeans2021ODO <- plyr::join(STRTmean2021odoMGL, STRTmean2021odoPSAT, by = ""datetimeAK"")"
"0","STRTmeans2021ODO <- plyr::join(STRTmeans2021ODO, STRTmean2021odoPLOC, by = ""datetimeAK"")"
"0","STRTmeans2021ODO <- plyr::join(STRTmeans2021ODO, STRTmean2021odoTEMPC, by = ""datetimeAK"")"
"0",""
"0","# ########## DEPTH ############ "
"0","# "
"0","# "
"0","# # Strt:"
"0","# "
"0","# #download flowmeter data"
"0","# WR_21.url <- ""https://drive.google.com/drive/u/1/folders/1LTD4EFX3_Yas0ZCF8rKLl6dxSeZDvkDY"""
"0","# WR.21.1 <- drive_get(as_id(WR_21.url))"
"0","# strt.wr21_glist <- drive_ls(WR.21.1, pattern = ""R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv"")"
"0","# walk(strt.wr21_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))"
"0","# strt_WR_21.Data <- read.csv(""R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv"","
"0","#                             skip = 0, header = TRUE, na.strings=c("""",""NA"",""blank""))"
"0","# "
"0","# "
"0","# strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Date, .direction = (""down""))"
"0","# "
"0","# strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Time, .direction = (""down""))"
"0","# "
"0","# "
"0","# strt_WR_21.Data$datetimeAK <- as.POSIXct(paste(strt_WR_21.Data$Date, strt_WR_21.Data$Time), format=""%y%m%d %H:%M"")"
"0","# "
"0","# "
"0","# strt_WR_21.Data <- strt_WR_21.Data %>%"
"0","#   select(Depth..cm., datetimeAK)"
"0","# "
"0","# Strt_depth_21 <- ddply(na.omit(strt_WR_21.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))"
"0","# "
"0","# # strt_wr.lm <- lm(meanDepth~datetimeAK, Strt_depth_21)"
"0","# "
"0","# "
"0","# Strt_depth_21 <- setDT(Strt_depth_21)"
"0","# "
"0","# Strt_depth_21 <- Strt_depth_21 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK)"
"0","# "
"0","# STRTmeans2021ODO <- setDT(STRTmeans2021ODO)"
"0","# "
"0","# setDT(Strt_depth_21)"
"0","# setDT(STRTmeans2021ODO)"
"0","# "
"0","# STRTmeans2021ODO$datetimeAK1 <- STRTmeans2021ODO$datetimeAK"
"0","# "
"0","# setkey( STRTmeans2021ODO, datetimeAK )"
"0","# setkey( Strt_depth_21, datetimeAK )"
"0","# "
"0","# #WR was taken when EXO out of water. round depth point to nearest in data record"
"0","# rounded.dates_strt21 <- STRTmeans2021ODO[ Strt_depth_21, roll = ""nearest"" ]"
"0","# "
"0","# rounded.dates_strt21 <- rounded.dates_strt21 %>%"
"0","#   dplyr::rename(datetimeAK_old = datetimeAK)"
"0","# rounded.dates_strt21 <- rounded.dates_strt21 %>%"
"0","#   dplyr::rename(datetimeAK = datetimeAK1)"
"0","# "
"0","# rounded.dates_strt21 <- rounded.dates_strt21 %>%"
"0","#   select(meanDepth, datetimeAK)"
"0","# "
"0","# Strt.2021.DO.Depth <- merge(STRTmeans2021ODO, rounded.dates_strt21, by = ""datetimeAK"", all = TRUE)"
"0","# Strt.2021.DO.Depth$meanDepth1 <- Strt.2021.DO.Depth$meanDepth"
"0","# "
"0","# strt21mod <- lm(meanDepth ~ datetimeAK, Strt.2021.DO.Depth)"
"0","# "
"0","# summary(strt21mod)"
"0","# "
"0","# Strt.2021.DO.Depth <- Strt.2021.DO.Depth %>% "
"0","#   mutate(predictedDepth = predict(strt21mod, .)) %>%"
"0","#   # Replace NA with pred in var1"
"0","#   mutate(meanDepth = ifelse(is.na(meanDepth), predictedDepth, meanDepth))"
"0",""
"0",""
"0",""
"0","#Put together"
"0","STRT_EXO_cl.2019.renamed <- STRT_EXO_cl.2019.renamed %>%"
"0","  select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc)"
"0",""
"0","strt.exo.2020 <- strt.exo.2020 %>%"
"0","  select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc)"
"0",""
"0","STRTmeans2021ODO <- STRTmeans2021ODO %>%"
"0","  select(datetimeAK, Temp.C, ODO.mgL, ODO.Psat, ODO.Ploc)"
"0",""
"0",""
"0","All.years.strt.MESSY <- rbind(STRT_EXO_cl.2019.renamed, strt.exo.2020, STRTmeans2021ODO)"
"0",""
"0","All.years.strt.MESSY <- All.years.strt.MESSY %>%"
"0","  dplyr::rename(DO.obs = ODO.mgL)"
"0",""
"0","All.years.strt.MESSY <- All.years.strt.MESSY %>%"
"0","  dplyr::rename(temp.water = Temp.C)"
"0",""
"0",""
"0",""
"0","#keep in mind 2019 and 2020 is clean data and 2021 are not."
"0","pdf(file = ""C:/Users/jadams125/documents/GitHub/UAF-Metabolism/Plots/StuartODO.pdf"")"
