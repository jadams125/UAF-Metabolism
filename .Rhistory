<<<<<<< Updated upstream
## Calculate mean velocity = meanVel_m_s
shov_WR <- shov_WR %>% mutate(meanVel_m_s = ifelse(is.na(Vel_m_s), mean(c(.$Vel_halfdepth_m_s, .$Vel_twicedepth_m_s)), .$Vel_m_s))
mast_WR <- mast_WR %>% mutate(meanVel_m_s = ifelse(is.na(Vel_m_s), mean(c(.$Vel_halfdepth_m_s, .$Vel_twicedepth_m_s)), .$Vel_m_s))
########################
mast_WR_19.Data <- mast_WR %>% rename(datetimeAK = datetime)
mast_WR_19.Data <- mast_WR_19.Data %>%
select(depth_cm, datetimeAK)
mast_depth_19_WR <- ddply(na.omit(mast_WR_19.Data), .(datetimeAK), summarize, medianDepth = median(as.numeric(depth_cm)))
# mast_wr.lm <- lm(medianDepth~datetimeAK, mast_depth_19)
mast_depth_19_WR <- setDT(mast_depth_19_WR)
mast_depth_19_WR <- mast_depth_19_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# mast.2019.pt <- mast.2019.pt %>%
#   mutate(across(c(AvgAbsDepth),
#                 ~ifelse(datetimeAK >= "2019-08-26 02:00:00" & datetimeAK <= "2019-09-08 12:15:00", NA, .)))
mast.2019.q.dt <- DoD_Epscor_Q_remove_mast
mast.2019.q.dt <- mast.2019.q.dt %>%
dplyr::rename(datetimeAK = DateTimeAK)
setDT(mast_depth_19_WR)
setDT(mast.2019.q.dt)
mast.2019.q.dt$datetimeAK1 <- mast.2019.q.dt$datetimeAK
setkey( mast.2019.q.dt, datetimeAK )
setkey( mast_depth_19_WR, datetimeAK )
#WR was taken when EXO out of water. round depth point to nearest in data record
rounded.dates_mast19 <- mast.2019.q.dt[ mast_depth_19_WR, roll = "nearest" ]
rounded.dates_mast19_WR_Q <- rounded.dates_mast19 %>% rename(discharge = RatingCurveQ) %>% select(datetimeAK, discharge, medianDepth)
#convert to meters
rounded.dates_mast19_WR_Q$medianDepth <- rounded.dates_mast19_WR_Q$medianDepth /100
mast_pt_wr_graph <- ggplot(rounded.dates_mast19_WR_Q, aes(discharge, medianDepth)) +
geom_point()
# Add regression line
mast_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("Depth (WR)")
ggsave("plots/mast_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
mast19_depth_mod <- lm(medianDepth~discharge, data = rounded.dates_mast19_WR_Q)
summary(mast19_depth_mod)
plot(medianDepth~discharge, data = rounded.dates_mast19_WR_Q)
# abline(mast19_depth_mod)
#extract slope of model and develop rating curve
mast.2019.q.dt$RatingCurveDepth <- mast19_depth_mod$coefficients[1]+(mast19_depth_mod$coefficients[2])*mast.2019.q.dt$Q
#Cureve is bad, use median
DoD_Epscor_Q_remove_mast$depth <- median(mast_WR$depth_cm)
mastData <- DoD_Epscor_Q_remove_mast %>% select(DateTimeAK, RatingCurveQ, depth) %>% rename(datetimeAK = DateTimeAK)
mastDO <- merged  %>%filter(site == "MAST") %>% select(datetimeAK, DO.obs.downstream, temp.water.downstream, DO.sat)
mastData <- full_join(mastData, mastDO, by = "datetimeAK")
mastData$solar.time <- calc_solar_time(mastData$datetimeAK,  -146.397201)
#Modeled light
mastData$light <- calc_light(mastData$solar.time, 64.893390, -146.397201)
mastData <- mastData %>% rename(DO.obs = DO.obs.downstream, temp.water = temp.water.downstream, discharge = RatingCurveQ) %>% select(datetimeAK, solar.time, DO.obs, DO.sat, temp.water, depth, discharge, light)
mastData <- mastData %>% filter(as.character(solar.time)>"2022-05-27 15:01:01" & as.character( solar.time)< "2022-10-06 10:16:01")
ts_2022.mast <- data.frame(solar.time = force_tz(as.POSIXct(seq(ymd_hms("2022-05-27 15:01:01"),ymd_hms("2022-10-06 10:16:01"), by = '15 mins')), tz = "UTC"))
mastData <- full_join(mastData, ts_2022.mast, by = "solar.time")
mastData <- mastData %>% select(datetimeAK, DO.obs, DO.sat, temp.water, depth, discharge, light)
mastData$solar.time <- calc_solar_time(mastData$datetimeAK,  -146.39720)
mastData <- mastData %>% filter(as.character(solar.time)>"2022-05-27 15:01:01" & as.character( solar.time)< "2022-10-06 10:16:01")
mastData %>% ggplot(aes(x=solar.time, y=DO.obs))+geom_miss_point()
mastData %>% ggplot(aes(x=solar.time, y=temp.water))+geom_miss_point()
mastData %>% ggplot(aes(x=solar.time, y=DO.sat))+geom_miss_point()
mastData %>% ggplot(aes(x=solar.time, y=depth))+geom_miss_point()
mastData %>% ggplot(aes(x=solar.time, y=discharge))+geom_miss_point()
mastData.mm <- mastData
mastData.mm %>% ggplot(aes(x=solar.time, y=discharge))+geom_miss_point()
mastData.mm$DO.obs <- na_kalman(mastData.mm$DO.obs)
mastData.mm$temp.water <- na_kalman(mastData.mm$temp.water, type = "level")
mastData.mm$DO.sat <- na_kalman(mastData.mm$DO.sat, type = "level")
mastData.mm$discharge <- na_kalman(mastData.mm$discharge)
# mastData.mm$depth <- na_kalman(mastData.mm$depth)
write.csv(data.mast.mm.all, here("outputs","clean.mast.2022.csv"))
data.mast.mm.all <- mastData.mm
write.csv(data.mast.mm.all, here("outputs","clean.mast.2022.csv"))
write.csv(here(data.craw.mm.all, "outputs","clean.craw.2022.csv"))
data.craw.mm.all <- CrawData.mm
write.csv(here(data.craw.mm.all, "outputs","clean.craw.2022.csv"))
View(CrawData.mm)
data.craw.mm.all <- CrawData.mm
write.csv(data.craw.mm.all, here("outputs","clean.craw.2022.csv"))
View(CrawData.mm)
View(CrawData)
DoD_Epscor_Q_remove_craw$depth <- median(craw_WR$depth_cm)
CrawData <- DoD_Epscor_Q_remove_craw %>% select(DateTimeAK, RatingCurveQ, depth) %>% rename(datetimeAK = DateTimeAK)
crawDO <- merged  %>%filter(site == "CRAW") %>% select(datetimeAK, DO.obs.downstream, temp.water.downstream, DO.sat)
CrawData <- full_join(CrawData, crawDO, by = "datetimeAK")
CrawData$solar.time <- calc_solar_time(CrawData$datetimeAK, -146.417931)
#Modeled light
CrawData$light <- calc_light(CrawData$solar.time, 64.894040, -146.417931)
CrawData <- CrawData %>% rename(DO.obs = DO.obs.downstream, temp.water = temp.water.downstream, discharge = RatingCurveQ) %>% select(datetimeAK, solar.time, DO.obs, DO.sat, temp.water, depth, discharge)
CrawData$light <- calc_light(CrawData$solar.time, 64.894040, -146.417931)
CrawData <- CrawData %>% filter(solar.time>"2022-05-27 16:45:56" & solar.time< "2022-10-06 11:30:56")
CrawData %>% ggplot(aes(x=solar.time, y=DO.obs))+geom_miss_point()
CrawData %>% ggplot(aes(x=solar.time, y=temp.water))+geom_miss_point()
CrawData %>% ggplot(aes(x=solar.time, y=DO.sat))+geom_miss_point()
CrawData %>% ggplot(aes(x=solar.time, y=depth))+geom_miss_point()
CrawData %>% ggplot(aes(x=solar.time, y=discharge))+geom_miss_point()
CrawData.mm <- CrawData %>% select(datetimeAK, solar.time, temp.water, DO.obs, discharge, depth, light, DO.sat) %>%
group_by(solar.time, new2 = rleid(is.na(discharge))) %>%
ungroup() %>%
group_by(discharge,new2) %>%
filter(n()<48) %>%
select(-new2)
CrawData.mm %>% ggplot(aes(x=solar.time, y=discharge))+geom_miss_point()
CrawData.mm$DO.obs <- na_kalman(CrawData.mm$DO.obs)
CrawData.mm$temp.water <- na_kalman(CrawData.mm$temp.water)
CrawData.mm$DO.sat <- na_kalman(CrawData.mm$DO.sat, type = "level")
CrawData.mm$discharge <- na_kalman(CrawData.mm$discharge)
# CrawData.mm$depth <- na_kalman(CrawData.mm$depth)
data.craw.mm.all <- CrawData.mm
write.csv(data.craw.mm.all, here("outputs","clean.craw.2022.csv"))
strt.gpp <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.gpp$site = "STRT"
strt.gpp$PF = "High"
strt.gpp$burn = "Burned"
strt.gpp$year <- format(as.Date(strt.gpp$date, format="%Y-%m-%d"),"%Y")
vaul.gpp <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.gpp$site = "VAUL"
vaul.gpp$PF = "High"
vaul.gpp$burn = "Unburned"
vaul.gpp$year <- format(as.Date(vaul.gpp$date, format="%Y-%m-%d"),"%Y")
#Poker 2022 bad
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
poke.gpp$PF = "Low"
poke.gpp$burn = "Burned"
poke.gpp$year <- format(as.Date(poke.gpp$date, format="%Y-%m-%d"),"%Y")
frch.gpp <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.gpp$site = "FRCH"
frch.gpp$PF = "Low"
frch.gpp$burn = "Unburned"
frch.gpp$year <- format(as.Date(frch.gpp$date, format="%Y-%m-%d"),"%Y")
=======
>>>>>>> Stashed changes
moos.gpp <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.gpp$site = "MOOS"
moos.gpp$PF = "Low"
moos.gpp$burn = "Burned"
moos.gpp$year <- format(as.Date(moos.gpp$date, format="%Y-%m-%d"),"%Y")
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
write.csv(metab_all_stw, here("outputs", "DoD_metab_TS.csv"))
median(na.omit(metab_all_stw$GPP_mean))
mean(na.omit(metab_all_stw$GPP_mean))
library(ggpattern)
plot2019 <- metab_all_stw %>% filter(year=="2019")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")+ geom_boxplot(aes(fill=as.factor(PF)),show.legend = FALSE) +
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(0,12)+ggtitle("2019")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("GPP (g ", O[2] ," ", m^-2, d^-1, ")")))
plot2020 <- metab_all_stw %>% filter(year=="2020")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)))+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(0,12)+ggtitle("2020")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"), labels=c('High Permafrost', 'Low Permafrost'))+  theme(legend.title=element_blank())+theme(axis.title.x=element_blank() )+  theme(legend.title=element_blank())+theme(legend.position = c(0.7, 0.7))
plot2021 <- metab_all_stw %>% filter(year=="2021")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ylim(0,12)+ggtitle("2021")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("GPP (g ", O[2] ," ", m^-2, d^-1, ")")))+theme(axis.title.x=element_blank() )
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
poke.gpp$PF = "Low"
poke.gpp$burn = "Burned"
poke.gpp$year <- format(as.Date(poke.gpp$date, format="%Y-%m-%d"),"%Y")
poke.gpp$GPP_mean <- NA
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
write.csv(metab_all, here("outputs","metab.all.csv"))
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
plot2022 <- metab_all_stw %>% filter(year=="2022")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") +  geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ylim(0,12)+ggtitle("2022")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+theme(axis.title.x=element_blank() )
library("RColorBrewer")
library(patchwork)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
pdf(here('plots',"GPP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
pdf(("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Plots/GPP_Boxplots/GPP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
strt.er <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.er$site = "STRT"
strt.er$PF = "High"
strt.er$burn = "Burned"
strt.er$year <- format(as.Date(strt.er$date, format="%Y-%m-%d"),"%Y")
vaul.er <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.er$site = "VAUL"
vaul.er$PF = "High"
vaul.er$burn = "Unburned"
vaul.er$year <- format(as.Date(vaul.er$date, format="%Y-%m-%d"),"%Y")
#Poker 2022 bad
poke.er <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.er$site = "POKE"
poke.er$PF = "Low"
poke.er$burn = "Burned"
poke.er$year <- format(as.Date(poke.er$date, format="%Y-%m-%d"),"%Y")
frch.er <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.er$site = "FRCH"
frch.er$PF = "Low"
frch.er$burn = "Unburned"
frch.er$year <- format(as.Date(frch.er$date, format="%Y-%m-%d"),"%Y")
moos.er <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.er$site = "MOOS"
moos.er$PF = "Low"
moos.er$burn = "Burned"
moos.er$year <- format(as.Date(moos.er$date, format="%Y-%m-%d"),"%Y")
#combine
metab_all <- rbind(strt.er, vaul.er, poke.er, frch.er, moos.er)
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
library(ggpattern)
plot2019 <- metab_all_stw %>% filter(year=="2019")%>%  ggplot(aes(x=site, y=ER_mean)) + facet_wrap(~year, nrow = 2, dir = "v")+ geom_boxplot(aes(fill=as.factor(PF)),show.legend = FALSE) +
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(-30,0)+ggtitle("2019")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("ER (g ", O[2] ," ", m^-2, d^-1, ")")))
plot2020 <- metab_all_stw %>% filter(year=="2020")%>%  ggplot(aes(x=site, y=ER_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)),show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(-30,0)+ggtitle("2020")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"), labels=c('High Permafrost', 'Low Permafrost'))
plot2021 <- metab_all_stw %>% filter(year=="2021")%>%  ggplot(aes(x=site, y=ER_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ylim(-30,0)+ggtitle("2021")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("ER (g ", O[2] ," ", m^-2, d^-1, ")")))+theme(axis.title.x=element_blank() )
poke.er <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")))
poke.er$site = "POKE"
poke.er$PF = "Low"
poke.er$burn = "Burned"
poke.er$year <- format(as.Date(poke.er$date, format="%Y-%m-%d"),"%Y")
poke.er$ER_mean <- NA
#combine
metab_all <- rbind(strt.er, vaul.er, poke.er, frch.er, moos.er)
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
plot2022 <- metab_all %>% filter(year=="2022")%>%  ggplot(aes(x=site, y=ER_mean)) + facet_wrap(~year, nrow = 2, dir = "v") +  geom_boxplot(aes(fill=as.factor(PF)))+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ylim(-30,0)+ggtitle("2022")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D") , labels=c('High Permafrost', 'Low Permafrost'))+theme(axis.title.x=element_blank() )+  theme(legend.title=element_blank())+theme(legend.position = c(0.7, 0.2))
library("RColorBrewer")
library(patchwork)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
pdf(here('plots',"ER.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
pdf(("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Plots/ER_Boxplots/ER.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
strt.nep <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.nep$site = "STRT"
strt.nep$PF = "High"
strt.nep$burn = "Burned"
strt.nep$year <- format(as.Date(strt.nep$date, format="%Y-%m-%d"),"%Y")
vaul.nep <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.nep$site = "VAUL"
vaul.nep$PF = "High"
vaul.nep$burn = "Unburned"
vaul.nep$year <- format(as.Date(vaul.nep$date, format="%Y-%m-%d"),"%Y")
#poker 2022 bad
poke.nep <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.nep$site = "POKE"
poke.nep$PF = "Low"
poke.nep$burn = "Burned"
poke.nep$year <- format(as.Date(poke.nep$date, format="%Y-%m-%d"),"%Y")
frch.nep <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.nep$site = "FRCH"
frch.nep$PF = "Low"
frch.nep$burn = "Unburned"
frch.nep$year <- format(as.Date(frch.nep$date, format="%Y-%m-%d"),"%Y")
moos.nep <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.nep$site = "MOOS"
moos.nep$PF = "Low"
moos.nep$burn = "Burned"
moos.nep$year <- format(as.Date(moos.nep$date, format="%Y-%m-%d"),"%Y")
#combine
metab_all <- rbind(strt.nep, vaul.nep, poke.nep, frch.nep, moos.nep)
metab_all$NEP_mean <- metab_all$GPP_mean+metab_all$ER_mean
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
library(ggpattern)
plot2019 <- metab_all_stw %>% filter(year=="2019")%>%  ggplot(aes(x=site, y=NEP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") +geom_hline(yintercept=0,linetype=2)+geom_boxplot(aes(fill=as.factor(PF)),show.legend = FALSE) +
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(-25,10)+ggtitle("2019")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("NEP (g ", O[2] ," ", m^-2, d^-1, ")")))
plot2020 <- metab_all_stw %>% filter(year=="2020")%>%  ggplot(aes(x=site, y=NEP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")  +geom_hline(yintercept=0,linetype=2)+geom_boxplot(aes(fill=as.factor(PF)))+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(-25,10)+ggtitle("2020")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"), labels=c('High Permafrost', 'Low Permafrost'))+  theme(legend.title=element_blank())+theme(legend.position = c(0.7, 0.9))+ guides(color=guide_legend(override.aes=list(fill=NA)))
plot2021 <- metab_all_stw %>% filter(year=="2021")%>%  ggplot(aes(x=site, y=NEP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_hline(yintercept=0,linetype=2) + geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ylim(-25,10)+ggtitle("2021")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("NEP (g ", O[2] ," ", m^-2, d^-1, ")")))+theme(axis.title.x=element_blank() )
poke.nep <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")))
poke.nep$site = "POKE"
poke.nep$PF = "Low"
poke.nep$burn = "Burned"
poke.nep$year <- format(as.Date(poke.nep$date, format="%Y-%m-%d"),"%Y")
poke.nep$NEP_mean <- NA
strt.nep$NEP_mean <- strt.nep$GPP_mean+strt.nep$ER_mean
vaul.nep$NEP_mean <- vaul.nep$GPP_mean+vaul.nep$ER_mean
moos.nep$NEP_mean <- moos.nep$GPP_mean+moos.nep$ER_mean
frch.nep$NEP_mean <- frch.nep$GPP_mean+frch.nep$ER_mean
metab_all <- rbind(strt.nep, vaul.nep, poke.nep, frch.nep, moos.nep)
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
plot2022 <- metab_all_stw %>% filter(year=="2022")%>%  ggplot(aes(x=site, y=NEP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") +geom_hline(yintercept=0,linetype=2)+ geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ylim(-25,10)+ggtitle("2022")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+theme(axis.title.x=element_blank() )
library(patchwork)
NEP_plot <- plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
pdf(here('plots',"NEP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
pdf(("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Plots/NEP_Boxplots/NEP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
strt.gpp <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.gpp$site = "STRT"
strt.gpp$PF = "High"
strt.gpp$burn = "Burned"
strt.gpp$year <- format(as.Date(strt.gpp$date, format="%Y-%m-%d"),"%Y")
vaul.gpp <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.gpp$site = "VAUL"
vaul.gpp$PF = "High"
vaul.gpp$burn = "Unburned"
vaul.gpp$year <- format(as.Date(vaul.gpp$date, format="%Y-%m-%d"),"%Y")
#Poker 2022 bad
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
poke.gpp$PF = "Low"
poke.gpp$burn = "Burned"
poke.gpp$year <- format(as.Date(poke.gpp$date, format="%Y-%m-%d"),"%Y")
frch.gpp <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.gpp$site = "FRCH"
frch.gpp$PF = "Low"
frch.gpp$burn = "Unburned"
frch.gpp$year <- format(as.Date(frch.gpp$date, format="%Y-%m-%d"),"%Y")
moos.gpp <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.gpp$site = "MOOS"
moos.gpp$PF = "Low"
moos.gpp$burn = "Burned"
moos.gpp$year <- format(as.Date(moos.gpp$date, format="%Y-%m-%d"),"%Y")
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
write.csv(metab_all_stw, here("outputs", "DoD_metab_TS.csv"))
median(na.omit(metab_all_stw$GPP_mean))
mean(na.omit(metab_all_stw$GPP_mean))
library(ggpattern)
plot2019 <- metab_all_stw %>% filter(year=="2019")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")+ geom_boxplot(aes(fill=as.factor(PF)),show.legend = FALSE) +
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(0,12)+ggtitle("2019")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("GPP (g ", O[2] ," ", m^-2, d^-1, ")")))
plot2020 <- metab_all_stw %>% filter(year=="2020")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)))+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme( strip.background = element_blank(),strip.text.x = element_blank() )+ylim(0,12)+ggtitle("2020")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"), labels=c('High Permafrost', 'Low Permafrost'))+  theme(legend.title=element_blank())+theme(axis.title.x=element_blank() )+  theme(legend.title=element_blank())+theme(legend.position = c(0.7, 0.7))
plot2021 <- metab_all_stw %>% filter(year=="2021")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") + geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ylim(0,12)+ggtitle("2021")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+labs(y = expression(paste("GPP (g ", O[2] ," ", m^-2, d^-1, ")")))+theme(axis.title.x=element_blank() )
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
poke.gpp$PF = "Low"
poke.gpp$burn = "Burned"
poke.gpp$year <- format(as.Date(poke.gpp$date, format="%Y-%m-%d"),"%Y")
poke.gpp$GPP_mean <- NA
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
write.csv(metab_all, here("outputs","metab.all.csv"))
metab_all$DOY <- yday(as.POSIXct(metab_all$date))
#highest minimum for all years
metab_all.2019 <-metab_all %>% filter(year =="2019") %>% filter(DOY>= "167" & DOY<="274")
metab_all.2020 <-metab_all %>% filter(year =="2020") %>% filter(DOY>= "169" & DOY<="276")
metab_all.2021 <-metab_all %>% filter(year =="2021") %>% filter(DOY>= "163" & DOY<="270")
metab_all.2022 <-metab_all %>% filter(year =="2022") %>% filter(DOY>= "164" & DOY<="271")
metab_all_stw <- rbind(metab_all.2019, metab_all.2020, metab_all.2021, metab_all.2022)
<<<<<<< Updated upstream
median_cl_quantile <- function(x, q = c(0.25, 0.75), na.rm = TRUE){
dat <- data.frame(y = median(x, na.rm = na.rm),
ymin = quantile(x, probs = q[1], na.rm = na.rm),
ymax = quantile(x, probs = q[2], na.rm = na.rm))
return(dat)
}
ggplot(metab_all_stw,aes(DOY, GPP_mean)) +
stat_summary(geom = "line", fun.y = median) +
stat_summary(geom = "ribbon", fun.data = median_cl_quantile, alpha = 0.3, color = "green", fill = "green")+labs(y = expression(paste("Median GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ labs(x = expression(paste("Day of the Year")))
+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme(axis.text.y=element_text(size=20))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.x=element_text(size=20))+theme( axis.title.x = element_text(size = 20)) +theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 40, face = "bold"))
ggplot(metab_all_stw,aes(DOY, GPP_mean)) +
stat_summary(geom = "line", fun.y = median) +
stat_summary(geom = "ribbon", fun.data = median_cl_quantile, alpha = 0.3, color = "green", fill = "green")+labs(y = expression(paste("Median GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ labs(x = expression(paste("Day of the Year")))
ggplot(metab_all_stw,aes(DOY, GPP_mean)) +
stat_summary(geom = "line", fun.y = median) +
stat_summary(geom = "ribbon", fun.data = median_cl_quantile, alpha = 0.3, color = "green", fill = "green")+labs(y = expression(paste("Median GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ labs(x = expression(paste("Day of the Year")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme(axis.text.y=element_text(size=20))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.x=element_text(size=20))+theme( axis.title.x = element_text(size = 20)) +theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 40, face = "bold"))
summary(metab_all_stw$GPP_mean)
summary(na.omit(metab_all_stw$GPP_mean))
mean(na.omit(metab_all_stw$GPP_mean))
# Load packages #
library(ggpubr)
library(anytime)
library(googlesheets4)
library(ggpmisc)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(zoo)
library(xts)
library(forecast)
library(googledrive)
library(streamMetabolizer)
library(readr)
library(here)
library(rstan)
library(imputeTS)
library(itsmr)
library(purrr)
library(naniar)
library(data.table)
library(grid)
library(ggtext)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
library(tidyverse)
library(lubridate)
library(data.table)
library(rio)
library(ggplot2)
library(scales)
library(psych)
library(here)
library(googledrive)
library(readxl)
library(cowplot)
library(zoo)
library(readr)
library(dplyr)
library(RColorBrewer)
library(gridExtra)
library(ggpmisc)
library(birk)
library(imputeTS)
library(neonUtilities)
data.craw.mm.all <- read.csv("outputs","clean.craw.2022.csv")
here()
data.craw.mm.all <- read.csv(here("outputs","clean.craw.2022.csv"))
#change Discharge to m3/s
data.craw.mm.all$discharge <- data.craw.mm.all$discharge / 1000
View(data.craw.mm.all)
#cm to m
data.craw.mm.all$depth <- data.craw.mm.all$depth / 100
bayes_name <- mm_name(type='bayes', pool_K600='binned', err_obs_iid=TRUE, err_proc_iid=TRUE)
q.min<-log(min(data.craw.mm.all$discharge))
q.max<-log(max(data.craw.mm.all$discharge))
nodes<-c(seq(q.min, q.max, by=(q.max-q.min)/5))
bayes_name <- mm_name(type='bayes', pool_K600='binned', err_obs_iid=TRUE, err_proc_iid=TRUE)
bayes_specs <- specs(bayes_name,
burnin_steps=5000, saved_steps=2000, n_cores=8,
GPP_daily_lower = 0, ER_daily_upper = 0, K600_lnQ_nodes_centers = nodes
)
#Change light to modeled light
data.craw.mm.all$solar.time <- as.POSIXct(data.craw.mm.all$solar.time, tz = "UTC")
data.craw.mm.all <- data.craw.mm.all %>% ungroup()
data.craw.mm.all <- data.craw.mm.all %>% group_by(solar.time) %>% mutate_each(funs(mean), -(1:5)) %>% distinct
data.craw.mm.all <- data.craw.mm.all %>% group_by(solar.time) %>% mutate_each(funs(mean), -(1:5)) %>% distinct
View(data.craw.mm.all)
data.craw.mm.all <- data.craw.mm.all %>% select(solar.time, DO.obs, DO.sat, light, discharge, depth, temp.water)
startTime <- as.POSIXct(Sys.time())
mm.test.craw <- metab(bayes_specs, data=data.craw.mm.all)
View(data.craw.mm.all)
data.craw.mm.all <- data.craw.mm.all %>% group_by(solar.time) %>% mutate_each(funs(mean), -(1:5)) %>% distinct
data.craw.mm.all <- data.craw.mm.all %>% select(solar.time, DO.obs, DO.sat, light, discharge, depth, temp.water)
startTime <- as.POSIXct(Sys.time())
mm.test.craw <- metab(bayes_specs, data=data.craw.mm.all)
data.craw.mm.all <- read.csv(here("outputs","clean.craw.2022.csv"))
#change Discharge to m3/s
data.craw.mm.all$discharge <- data.craw.mm.all$discharge / 1000
#cm to m
data.craw.mm.all$depth <- data.craw.mm.all$depth / 100
q.min<-log(min(data.craw.mm.all$discharge))
q.max<-log(max(data.craw.mm.all$discharge))
nodes<-c(seq(q.min, q.max, by=(q.max-q.min)/5))
bayes_name <- mm_name(type='bayes', pool_K600='binned', err_obs_iid=TRUE, err_proc_iid=TRUE)
bayes_specs <- specs(bayes_name,
burnin_steps=2000, saved_steps=1000, n_cores=8,
GPP_daily_lower = 0, ER_daily_upper = 0, K600_lnQ_nodes_centers = nodes
)
#Change light to modeled light
data.craw.mm.all$solar.time <- as.POSIXct(data.craw.mm.all$solar.time, tz = "UTC")
data.craw.mm.all <- data.craw.mm.all %>% ungroup()
data.craw.mm.all <- data.craw.mm.all %>% group_by(solar.time) %>% mutate_each(funs(mean), -(1:5)) %>% distinct
data.craw.mm.all <- data.craw.mm.all %>% select(solar.time, DO.obs, DO.sat, light, discharge, depth, temp.water)
startTime <- as.POSIXct(Sys.time())
mm.test.craw <- metab(bayes_specs, data=data.craw.mm.all)
data.craw.mm.all <- read.csv(here("outputs","clean.craw.2022.csv"))
#change Discharge to m3/s
data.craw.mm.all$discharge <- data.craw.mm.all$discharge / 1000
#cm to m
data.craw.mm.all$depth <- data.craw.mm.all$depth / 100
q.min<-log(min(data.craw.mm.all$discharge))
q.max<-log(max(data.craw.mm.all$discharge))
nodes<-c(seq(q.min, q.max, by=(q.max-q.min)/5))
bayes_name <- mm_name(type='bayes', pool_K600='binned', err_obs_iid=TRUE, err_proc_iid=TRUE)
bayes_specs <- specs(bayes_name,
burnin_steps=2000, saved_steps=1000, n_cores=8,
GPP_daily_lower = 0, ER_daily_upper = 0, K600_lnQ_nodes_centers = nodes
)
#Change light to modeled light
data.craw.mm.all$solar.time <- as.POSIXct(data.craw.mm.all$solar.time, tz = "UTC")
data.craw.mm.all <- data.craw.mm.all %>% ungroup()
data.craw.mm.all <- data.craw.mm.all %>% select(solar.time, DO.obs, DO.sat, light, discharge, depth, temp.water)
data.craw.mm.all <- data.craw.mm.all %>% group_by(solar.time) %>% mutate_each(funs(mean), -(1:5)) %>% distinct
startTime <- as.POSIXct(Sys.time())
mm.test.craw <- metab(bayes_specs, data=data.craw.mm.all)
=======
plot2022 <- metab_all_stw %>% filter(year=="2022")%>%  ggplot(aes(x=site, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v") +  geom_boxplot(aes(fill=as.factor(PF)), show.legend = FALSE)+
facet_grid(. ~ burn , space="free_x", scales="free_x", switch="x") +
theme_classic() +
theme(strip.placement = "outside",
strip.background = element_rect(fill=NA, colour="grey50"),
panel.spacing.x=unit(0,"cm"))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ylim(0,12)+ggtitle("2022")+theme(plot.title = element_text(hjust = 1))+scale_fill_manual(values = c("#71A6D2", "#A13D2D"))+theme(axis.title.x=element_blank() )
library("RColorBrewer")
library(patchwork)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
pdf(here('plots',"GPP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
pdf(("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Plots/GPP_Boxplots/GPP.plot.pdf"), height = 4.5*1.2, width = 5*1.2)
plot_layout(plot2019+plot2020+plot2021+plot2022, nrow=2, ncol = 2)
dev.off()
metab_all_stw %>% ggplot(aes(x = DOY, y = GPP_daily_mean)) +
geom_point() +
facet_wrap(~as.factor(burn), nrow = 2)
metab_all_stw %>% ggplot(aes(x = DOY, y = GPP_daily_mean)) +
geom_point() +
facet_wrap(~as.factor(PF), nrow = 2)
metab_all <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Data/DoD_metab_TS.csv")
metab_all <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/MetabolismStorage/Data/DoD_metab_TS.csv")
metab_all$year <- as.character (metab_all$year)
metab_all$burn <- as.character(metab_all$burn)
metab_all$PF <- as.character(metab_all$PF)
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
library(lme4)
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/10) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/5) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/4) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/2) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, 1/(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log10(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/20) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/100) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/20) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/30) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/15) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log2(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn )
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
test.mod <- lm(data = metab_all, log(GPP_mean) ~ burn)
plot(test.mod)
test.mod <- lm(data = metab_all, (GPP_mean) ~ burn)
plot(test.mod)
test.mod <- lm(data = metab_all, (GPP_mean)^0.5 ~ burn)
plot(test.mod)
plot(test.mod)
summary(test.mod)
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^0.5 ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
summary(test.mod)
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
library(MASS)
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
boxcox(test.mod, plotit = TRUE)
test.mod <- lmer(data = metab_all, (GPP_mean)^(3/4) ~ burn + PF + (1|year))
boxcox(test.mod, plotit = TRUE)
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
summary(test.mod)
test.mod <- lmer(data = metab_all, (GPP_mean ~ burn + PF + (1|year))
test.mod <- lmer(data = metab_all, (GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, log(GPP_mean) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn + PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn * PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/2) ~ burn * PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/2) ~ burn *+PF + (1|year))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/2) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/50) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/20) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/10) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
test.mod <- lmer(data = metab_all, (GPP_mean)^(1/3) ~ burn +PF + (1|year))
plot(test.mod)
qqnorm(resid(test.mod))
qqline(resid(test.mod))
>>>>>>> Stashed changes
