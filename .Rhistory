panGPP <- ggplotGrob(gpp2020)
panQ <- ggplotGrob(q.fig2020)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2020 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2020.gpp.q.pdf", fig2020, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2021 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))+ annotation_custom(grobTree(textGrob("2021", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2021 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2021)
panQ <- ggplotGrob(q.fig2021)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2021 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2021.gpp.q.pdf", fig2021, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2022 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+q.fig2021 + plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
strt.metab <- read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv"))
strt.metab$date <- as.POSIXct(strt.metab$date)
# grob <- grobTree(textGrob("2019", x="2019-09-01", y=4, hjust=0,
#   gp=gpar(col="black", fontsize=20, fontface="italic")))
# Plo
gpp2019 <- ggplot(data=strt.metab, aes(x=(date), y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+ annotate("text", x= as.POSIXct("2019-09-11"), y=max(strt.metab$GPP_mean),label="2019")+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ annotation_custom(grobTree(textGrob("2019", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
strt.comb <- read.csv(here("outputs", "strt.comb.csv"))
strt.comb$solar.time <- as.POSIXct(strt.comb$solar.time, tz = "UTC")
strt.comb$discharge  <- strt.comb$discharge
q.fig2019 <-  strt.comb %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = as.POSIXct(solar.time))) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20)) +scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
#L.fig <- strt.comb  %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(strt.comb$light))
panGPP <- ggplotGrob(gpp2019)
panQ <- ggplotGrob(q.fig2019)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2019 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "strt2019.gpp.q.pdf", fig2019, width = 12,  height = 6, units = "in", limitsize = FALSE)
strt.metab <- read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv"))
strt.metab$date <- as.POSIXct(strt.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2020 <- ggplot(data=strt.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2020", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
strt.comb <- read.csv(here("outputs", "strt.comb.csv"))
strt.comb$solar.time <- as.POSIXct(strt.comb$solar.time, tz = "UTC")
strt.comb$discharge  <- strt.comb$discharge
q.fig2020 <-  strt.comb %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- strt.comb  %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(strt.comb$light))
panGPP <- ggplotGrob(gpp2020)
panQ <- ggplotGrob(q.fig2020)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2020 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "strt2020.gpp.q.pdf", fig2020, width = 12,  height = 6, units = "in", limitsize = FALSE)
strt.metab <- read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv"))
strt.metab$date <- as.POSIXct(strt.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2021 <- ggplot(data=strt.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))+ annotation_custom(grobTree(textGrob("2021", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
strt.comb <- read.csv(here("outputs", "strt.comb.csv"))
strt.comb$solar.time <- as.POSIXct(strt.comb$solar.time, tz = "UTC")
strt.comb$discharge  <- strt.comb$discharge
q.fig2021 <-  strt.comb %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))
#L.fig <- strt.comb  %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(strt.comb$light))
panGPP <- ggplotGrob(gpp2021)
panQ <- ggplotGrob(q.fig2021)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2021 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "strt2021.gpp.q.pdf", fig2021, width = 12,  height = 6, units = "in", limitsize = FALSE)
strt.metab <- read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv"))
strt.metab$date <- as.POSIXct(strt.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=strt.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
strt.comb <- read.csv(here("outputs", "strt.comb.csv"))
strt.comb$solar.time <- as.POSIXct(strt.comb$solar.time, tz = "UTC")
strt.comb$discharge  <- strt.comb$discharge
q.fig2022 <-  strt.comb %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- strt.comb  %>% filter(datetimeAK >= min(strt.metab$date)) %>% filter(datetimeAK <= max(strt.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(strt.comb$light))
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "strt2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Stuart Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+gpp2022+q.fig2021+q.fig2022 + plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "strt.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")) %>% filter(date>"2040-01-01")
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.metab <- read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
# grob <- grobTree(textGrob("2019", x="2019-09-01", y=4, hjust=0,
#   gp=gpar(col="black", fontsize=20, fontface="italic")))
# Plo
gpp2019 <- ggplot(data=poke.metab, aes(x=(date), y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+ annotate("text", x= as.POSIXct("2019-09-11"), y=max(poke.metab$GPP_mean),label="2019")+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ annotation_custom(grobTree(textGrob("2019", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2019 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = as.POSIXct(solar.time))) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20)) +scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2019)
panQ <- ggplotGrob(q.fig2019)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2019 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2019.gpp.q.pdf", fig2019, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2020 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2020", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2020 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2020)
panQ <- ggplotGrob(q.fig2020)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2020 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2020.gpp.q.pdf", fig2020, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2021 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))+ annotation_custom(grobTree(textGrob("2021", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2021 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2021)
panQ <- ggplotGrob(q.fig2021)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2021 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2021.gpp.q.pdf", fig2021, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")) %>% filter(date>"2040-01-01")
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2022 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+q.fig2021 + plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")) %>% filter(date>"2040-01-01")
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2022 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
q.fig2022 <-  poke.comb %>%  ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 15000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+q.fig2021 + plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+q.fig2021 +gpp2022+q.fig2022+ plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+gpp2022+q.fig2021 +q.fig2022+ plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
# grob <- grobTree(textGrob("2019", x="2019-09-01", y=4, hjust=0,
#   gp=gpar(col="black", fontsize=20, fontface="italic")))
# Plo
gpp2019 <- ggplot(data=poke.metab, aes(x=(date), y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+ annotate("text", x= as.POSIXct("2019-09-11"), y=max(poke.metab$GPP_mean),label="2019")+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ annotation_custom(grobTree(textGrob("2019", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2019 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = as.POSIXct(solar.time))) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20)) +scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2019)
panQ <- ggplotGrob(q.fig2019)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2019 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2019.gpp.q.pdf", fig2019, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2020 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2020", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2020 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2020)
panQ <- ggplotGrob(q.fig2020)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2020 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2020.gpp.q.pdf", fig2020, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2021 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))+ annotation_custom(grobTree(textGrob("2021", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2021 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2021)
panQ <- ggplotGrob(q.fig2021)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2021 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2021.gpp.q.pdf", fig2021, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")) %>% filter(date>"2040-01-01")
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 5) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2022 <-  poke.comb %>%  ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+gpp2022+q.fig2021 +q.fig2022+ plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
# grob <- grobTree(textGrob("2019", x="2019-09-01", y=4, hjust=0,
#   gp=gpar(col="black", fontsize=20, fontface="italic")))
# Plo
gpp2019 <- ggplot(data=poke.metab, aes(x=(date), y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+ annotate("text", x= as.POSIXct("2019-09-11"), y=max(poke.metab$GPP_mean),label="2019")+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ annotation_custom(grobTree(textGrob("2019", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2019 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = as.POSIXct(solar.time))) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20)) +scale_x_datetime(limits = ymd_hm(c("2019-05-25 00:00", "2019-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2019)
panQ <- ggplotGrob(q.fig2019)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2019 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2019.gpp.q.pdf", fig2019, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2020 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 4) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2020", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2020 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2020-05-25 00:00", "2020-10-15 00:00")))+theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2020)
panQ <- ggplotGrob(q.fig2020)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2020 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2020.gpp.q.pdf", fig2020, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv"))
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2021 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 4) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))+ annotation_custom(grobTree(textGrob("2021", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2021 <-  poke.comb %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2021-05-25 00:00", "2021-10-15 00:00")))
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2021)
panQ <- ggplotGrob(q.fig2021)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2021 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2021.gpp.q.pdf", fig2021, width = 12,  height = 6, units = "in", limitsize = FALSE)
poke.metab <- read.csv(here("outputs", "poker2022-Run_2023-Full.rerun.02.04.csv")) %>% filter(date>"2040-01-01")
poke.metab$date <- as.POSIXct(poke.metab$date)
labels <- c(light='PAR\n(umol m^-2 s^-1)', discharge= 'm^3/sec')
gpp2022 <- ggplot(data=poke.metab, aes(x=date, y=GPP_mean)) + geom_point(color = "chartreuse4") + geom_errorbar(aes(ymin=GPP_mean-GPP_sd, ymax=GPP_mean+GPP_sd), width=.2, position=position_dodge(0.05), color = "chartreuse4")+ labs(y = expression(paste("GPP (g ", O[2] ," ", m^2, d^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+theme(plot.title = element_text(hjust = 0.5))+theme(plot.title = element_text(size = 20, face = "bold")) +ylim(0, 4) + theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00")))+ theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )+ annotation_custom(grobTree(textGrob("2022", x=0.8, hjust=0, y=0.8, vjust=0, gp=gpar(col="black", fontsize=30))))
poke.comb <- read.csv(here("outputs", "poke.comb.csv"))
poke.comb$solar.time <- as.POSIXct(poke.comb$solar.time, tz = "UTC")
poke.comb$discharge  <- poke.comb$discharge
q.fig2022 <-  poke.comb %>%  ggplot(aes(x = solar.time)) +geom_point(aes(y=discharge), color = "slateblue4", size=0.4)+ labs(y = expression(paste("Discharge (L ", s^-1, ")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, 3000)+theme(axis.title.x=element_blank())+theme(text = element_text(size=20))+scale_x_datetime(limits = ymd_hm(c("2022-05-25 00:00", "2022-10-15 00:00"))) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.y=element_blank() )
#L.fig <- poke.comb  %>% filter(datetimeAK >= min(poke.metab$date)) %>% filter(datetimeAK <= max(poke.metab$date)) %>% ggplot(aes(x = solar.time)) +geom_point(aes(y=light), color = "orange", size=0.4)+ theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.title.x=element_blank() )+ labs(y = expression(paste("PAR (umol ", m^-2, s^-1,")")))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank())+ theme(panel.border = element_rect(colour = "black", fill=NA, size=2))+theme( axis.title.y = element_text(size = 20))+theme(axis.text.y=element_text(size=20))+ylim(0, max(poke.comb$light))
panGPP <- ggplotGrob(gpp2022)
panQ <- ggplotGrob(q.fig2022)
grid::grid.newpage()
grid.draw(rbind(panGPP,  panQ,size="max"))
fig2022 <- arrangeGrob(rbind(panGPP,  panQ,size="max"))
ggsave(path = here("plots"), file = "poke2022.gpp.q.pdf", fig2022, width = 12,  height = 6, units = "in", limitsize = FALSE)
library(grid)
library(ggeffects)
library(gridExtra)
library(gtable)
# If that doesnt do it, add grid
#devtools::install_github("thomasp85/patchwork")
library(patchwork)
plottest <- gpp2019+ggtitle("Poker Creek")+theme(plot.title = element_text(size = 30, hjust = 0)) + gpp2020 + q.fig2019+q.fig2020 + gpp2021+gpp2022+q.fig2021 +q.fig2022+ plot_layout(ncol = 2, widths = c(2, 2))
ggsave(path = here("plots"), file = "poke.gpp.q.all.pdf", plottest, width = 11*1.3,  height = 8.5*1.3, units = "in", limitsize = FALSE)
strt.gpp <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.gpp$site = "STRT"
vaul.gpp <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.gpp$site = "VAUL"
#Poker 2022 bad
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
frch.gpp <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.gpp$site = "FRCH"
moos.gpp <- rbind(
read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.gpp$site = "MOOS"
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
strt.gpp$PF = "High"
vaul.gpp$PF = "High"
poke.gpp$PF "Low"
poke.gpp$PF = "Low"
View(poke.gpp)
frch.gpp$PF = "Low"
moos.gpp <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.gpp$site = "MOOS"
moos.gpp <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
moos.gpp$PF = "Low"
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
trt.gpp <- rbind( read.csv(here("outputs", "stuart2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2021-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "stuart2022-Run_2023-Full.rerun.02.04.csv")))
strt.gpp$site = "STRT"
strt.gpp$PF = "High"
vaul.gpp <- rbind( read.csv(here("outputs", "vault2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "vault2021-2022-Run_2023-Full.rerun.02.04.csv")))
vaul.gpp$site = "VAUL"
vaul.gpp$PF = "High"
#Poker 2022 bad
poke.gpp <- rbind( read.csv(here("outputs", "poker2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "poker2021-Run_2023-Full.rerun.02.04.csv")))
poke.gpp$site = "POKE"
poke.gpp$PF = "Low"
frch.gpp <- rbind( read.csv(here("outputs", "french2019-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs", "french2021-Run_2023-Full.rerun.02.04.csv")),read.csv(here("outputs", "french2022-Run_2023-Full.rerun.02.04.csv")))
frch.gpp$site = "FRCH"
frch.gpp$PF = "Low"
moos.gpp <- rbind(
read.csv(here("outputs", "moose2019-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2020-Run_2023-Full.rerun.02.04.csv")), read.csv(here("outputs","moose2021-Run_2023-Full.rerun.02.04.csv")),
read.csv(here("outputs", "moose2022-Run_2023-Full.rerun.02.04.csv"))
)
moos.gpp$site = "MOOS"
moos.gpp$PF = "Low"
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
metab_all <- metab_all %>% select(date, GPP_mean, GPP_daily_se_mean, GPP_daily_sd, GPP_Rhat, site)
write.csv(metab_all, here("outputs", "DoD_metab_TS.csv"))
strt.gpp$burn = "burned"
strt.gpp$burn = "Burned"
vaul.gpp$burn = "Unburned"
poke.gpp$burn = "Burned"
frch.gpp$burn = "Unburned"
moos.gpp$burn = "Burned"
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
metab_all.short <- metab_all %>% select(date, GPP_mean, GPP_daily_se_mean, GPP_daily_sd, GPP_Rhat, site)
write.csv(metab_all.short, here("outputs", "DoD_metab_TS.csv"))
strt.gpp$year <- format(as.Date(strt.gpp$date, format="%d/%m/%Y"),"%Y")
View(strt.gpp)
strt.gpp$year <- format(as.Date(strt.gpp$date, format="%Y-%m-%d"),"%Y")
View(strt.gpp)
vaul.gpp$year <- format(as.Date(vaul.gpp$date, format="%Y-%m-%d"),"%Y")
poke.gpp$year <- format(as.Date(poke.gpp$date, format="%Y-%m-%d"),"%Y")
frch.gpp$year <- format(as.Date(frch.gpp$date, format="%Y-%m-%d"),"%Y")
moos.gpp$year <- format(as.Date(moos.gpp$date, format="%Y-%m-%d"),"%Y")
#combine
metab_all <- rbind(strt.gpp, vaul.gpp, poke.gpp, frch.gpp, moos.gpp)
metab_all %>% ggplot(aes(x=date, y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")
metab_all %>% ggplot(aes(x=as.POSIXct(date), y=GPP_mean)) + facet_wrap(~year, nrow = 2, dir = "v")
View(metab_all)
metab_all %>% ggplot(aes(x=as.POSIXct(date), y=GPP_mean, group = site)) + facet_wrap(~year, nrow = 2, dir = "v")
View(metab_all)
metab_all %>% ggplot(aes(x=as.POSIXct(date), y=GPP_mean, group = site)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, group = burn)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, group = site)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, group = burn)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, color = burn)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, color = burn,  pattern = PF)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot()
metab_all %>% ggplot(aes(x=site, y=GPP_mean, color = burn,  pattern = PF)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot() +
geom_bar_pattern(position = position_dodge(preserve = "single"),
color = "black",
pattern_fill = "black",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6) +
scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) +
scale_pattern_manual(values = c(Nerd = "stripe", NotNerd = "none")) +
labs(x = "Class", y = "Number of Students", pattern = "Nerd?") +
guides(pattern = guide_legend(override.aes = list(fill = "white")),
fill = guide_legend(override.aes = list(pattern = "none")))
metab_all %>% ggplot(aes(x=site, y=GPP_mean, color = burn,  pattern = PF)) + facet_wrap(~year, nrow = 2, dir = "v")+geom_boxplot() +
geom_bar_pattern(position = position_dodge(preserve = "single"),
color = "black",
pattern_fill = "black",
pattern_angle = 45,
pattern_density = 0.1,
pattern_spacing = 0.025,
pattern_key_scale_factor = 0.6) +
scale_fill_manual(values = colorRampPalette(c("#0066CC","#FFFFFF","#FF8C00"))(4)) +
scale_pattern_manual(values = c(High = "stripe", Low = "none")) +
labs(x = "SIte", y = "GPP", pattern = "Permafrost") +
guides(pattern = guide_legend(override.aes = list(fill = "white")),
fill = guide_legend(override.aes = list(pattern = "none")))
remotes::install_github("coolbutuseless/ggpattern")
install.packages("ggpattern")
install.packages("ggpattern")
library(ggpattern)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggpattern)
update.packages("ggplot2")
update.packages(ggplot2)
update.packages("ggplot2")
library(ggpattern)
library(rlang)
library(ggpattern)
install.packages("rlang")
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggpattern)
remove.packages(ggplot2)
install.packages(ggplot2)
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
remove.packages("vctrs")
remove.packages("rlang")
remove.packages("cli")
remove.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
