# Add regression line
poke_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("V (WR)")
ggsave("plots/poke_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
poke21_V_mod <- lm(meanVelocity~discharge, data = rounded.dates_poke21_WR_Q)
summary(poke21_V_mod)
plot(meanVelocity~discharge, data = rounded.dates_poke21_WR_Q)
# abline(poke21_V_mod)
#extract slope of model and develop rating curve
poke.2021.q.dt$RatingCurveV <- poke21_V_mod$coefficients[1]+(poke21_V_mod$coefficients[2])*poke.2021.q.dt$Q
poke.2021.q.dt$date <- as.Date(poke.2021.q.dt$datetimeAK)
daily.mean.velocity.poke <- poke.2021.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveV), list(name = mean))
######### Daily Q ##########
#discharge
poke.2021.Q$date <- as.Date(poke.2021.Q$DateTime)
poke.2021.Q <- poke.2021.Q %>% rename(discharge = Q)
poke.discharge <- na.omit(poke.2021.Q) %>%
group_by(date) %>%
summarise_at(vars(discharge), list(name = mean)) %>% rename(discharge = name)
daily.mean.velocity.poke <- daily.mean.velocity.poke %>% rename(velocity = name)
daily.mean.depth.poke <- daily.mean.depth.poke %>% rename(depth = name)
data <- merge(daily.mean.velocity.poke,daily.mean.depth.poke, by = "date")
data <- merge(data, poke.discharge, by = "date")
#slope
poke.slope <- 2.36021/100
#Equations
data$k600.1 <-  ((data$velocity * poke.slope)^(0.89)) * (data$depth^(0.54)) * 5037
data$k600.3 <-  1162 * (poke.slope^(0.77)) * (data$velocity^(0.85))
data$k600.4 <- ((data$velocity*poke.slope)^(0.76)) * 951.5
data$k600.5 <- (data$velocity*poke.slope) * 2841 + 2.02
data$k600.6 <- 929*((data$velocity*poke.slope)^(0.75)) * data$discharge^(0.011)
data$k600.7 <- 4725*((data$velocity*poke.slope)^(0.86)) * (data$discharge^(-0.14)) *(data$depth^(0.66))
metab.poker <- read.csv(here("outputs","poker2021-Run_2023-01-09.csv"))
SM.K <- metab.poker %>% select(date, K600_daily_mean)
SM.K <- SM.K %>% rename(k600.SM = K600_daily_mean)
SM.K$date <- as.Date(SM.K$date)
data2 <- merge(data,SM.K, by = "date")
# ALL YEARS
K.plot1_poker_2021 <- data2 %>%
select(date, starts_with('k600')) %>%
gather(type, k600.value, starts_with('k600')) %>%  ggplot(aes(x=date, y=k600.value, color=type)) + geom_line() + theme_bw() +
scale_color_discrete('variable') + labs(title = "K600, poker 2021. From Raymond Equations ", y = expression(paste("K600 (", d^-1, ")")))
K.plot1_poker_2021
####################### Stuart ################
#################### stuart ################################
############### stuart 2019 ############
#slope
strt.slope <- 2.13534/100
Q_2019 <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_Discharge/Predicted_Discharge/2019/Q_2019.csv")
Q_2019$DateTime <-  force_tz(as.POSIXct(ymd_hms(Q_2019$DateTime)), tz = "America/Anchorage")
#### Breaking up into sites ####
strt_Q_2019 <- Q_2019 %>% filter(Site == "STRT")
strt.2019.Q <- strt_Q_2019 %>%
select(DateTime, Q, Site)
############# Continuous Depth ############
#download flowmeter data
WR_19.url <- "https://drive.google.com/drive/u/1/folders/1bm62_JO1dKrFPyUCz8E88K5q7IHElXPP"
WR.19.1 <- drive_get(as_id(WR_19.url))
strt.wr19_glist <- drive_ls(WR.19.1, pattern = "STRT_2019_flowmeter_Q_for_R_JAA.csv")
walk(strt.wr19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_19.Data <- read.csv("STRT_2019_flowmeter_Q_for_R_JAA.csv",
header = TRUE, na.strings=c("","NA","blank"))
strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_19.Data$datetimeAK <- as.POSIXct(paste(strt_WR_19.Data$Date, strt_WR_19.Data$Time), format="%m/%d/%Y %H:%M")
strt_WR_19.Data <- strt_WR_19.Data %>%
select(Depth..cm., datetimeAK)
strt_depth_19_WR <- ddply(na.omit(strt_WR_19.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_19)
strt_depth_19_WR <- setDT(strt_depth_19_WR)
strt_depth_19_WR <- strt_depth_19_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2019.pt <- strt.2019.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2019.pt <- strt.2019.pt %>%
#   mutate(across(c(AvgAbsDepth),
#                 ~ifelse(datetimeAK >= "2019-08-26 02:00:00" & datetimeAK <= "2019-09-08 12:15:00", NA, .)))
strt.2019.q.dt <- strt.2019.Q
strt.2019.q.dt <- strt.2019.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_depth_19_WR)
setDT(strt.2019.q.dt)
strt.2019.q.dt$datetimeAK1 <- strt.2019.q.dt$datetimeAK
setkey( strt.2019.q.dt, datetimeAK )
setkey( strt_depth_19_WR, datetimeAK )
#WR was taken when EXO out of water. round depth point to nearest in data record
rounded.dates_strt19 <- strt.2019.q.dt[ strt_depth_19_WR, roll = "nearest" ]
rounded.dates_strt19_WR_Q <- rounded.dates_strt19 %>% rename(discharge = Q) %>%
select(datetimeAK, discharge, meanDepth)
#convert to meters
rounded.dates_strt19_WR_Q$meanDepth <- rounded.dates_strt19_WR_Q$meanDepth /100
strt_pt_wr_graph <- ggplot(rounded.dates_strt19_WR_Q, aes(discharge, meanDepth)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("Depth (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt19_depth_mod <- lm(meanDepth~discharge, data = rounded.dates_strt19_WR_Q)
summary(strt19_depth_mod)
plot(meanDepth~discharge, data = rounded.dates_strt19_WR_Q)
# abline(strt19_depth_mod)
#extract slope of model and develop rating curve
strt.2019.q.dt$RatingCurveDepth <- strt19_depth_mod$coefficients[1]+(strt19_depth_mod$coefficients[2])*strt.2019.q.dt$Q
strt.2019.q.dt$date <- as.Date(strt.2019.q.dt$datetimeAK)
daily.mean.depth.strt <- strt.2019.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveDepth), list(name = mean))
#########
############# Continuous Velocity ############
#download flowmeter data
WR_19.url <- "https://drive.google.com/drive/u/1/folders/1bm62_JO1dKrFPyUCz8E88K5q7IHElXPP"
WR.19.1 <- drive_get(as_id(WR_19.url))
strt.wr19_glist <- drive_ls(WR.19.1, pattern = "STRT_2019_flowmeter_Q_for_R_JAA.csv")
walk(strt.wr19_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_19.Data <- read.csv("STRT_2019_flowmeter_Q_for_R_JAA.csv",
header = TRUE, na.strings=c("","NA","blank"))
strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_19.Data <- strt_WR_19.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_19.Data$datetimeAK <- as.POSIXct(paste(strt_WR_19.Data$Date, strt_WR_19.Data$Time), format="%m/%d/%Y %H:%M")
strt_WR_19.Data <- strt_WR_19.Data %>%
select(Mean.Vel..m.s., datetimeAK)
strt_V_19_WR <- ddply(na.omit(strt_WR_19.Data), .(datetimeAK), summarize, meanVelocity = mean(as.numeric(Mean.Vel..m.s.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_19)
strt_V_19_WR <- setDT(strt_V_19_WR)
strt_V_19_WR <- strt_V_19_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2019.pt <- strt.2019.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2019.pt <- strt.2019.pt %>%
#   mutate(across(c(AvgAbsV),
#                 ~ifelse(datetimeAK >= "2019-08-26 02:00:00" & datetimeAK <= "2019-09-08 12:15:00", NA, .)))
strt.2019.q.dt <- strt.2019.Q
strt.2019.q.dt <- strt.2019.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_V_19_WR)
setDT(strt.2019.q.dt)
strt.2019.q.dt$datetimeAK1 <- strt.2019.q.dt$datetimeAK
setkey( strt.2019.q.dt, datetimeAK )
setkey( strt_V_19_WR, datetimeAK )
#WR was taken when EXO out of water. round V point to nearest in data record
rounded.dates_strt19 <- strt.2019.q.dt[ strt_V_19_WR, roll = "nearest" ]
rounded.dates_strt19_WR_Q <- rounded.dates_strt19  %>% rename (discharge = Q) %>% select(datetimeAK, discharge, meanVelocity)
strt_pt_wr_graph <- ggplot(rounded.dates_strt19_WR_Q, aes(discharge, meanVelocity)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("V (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt19_V_mod <- lm(meanVelocity~discharge, data = rounded.dates_strt19_WR_Q)
summary(strt19_V_mod)
plot(meanVelocity~discharge, data = rounded.dates_strt19_WR_Q)
# abline(strt19_V_mod)
#extract slope of model and develop rating curve
strt.2019.q.dt$RatingCurveV <- strt19_V_mod$coefficients[1]+(strt19_V_mod$coefficients[2])*strt.2019.q.dt$Q
strt.2019.q.dt$date <- as.Date(strt.2019.q.dt$datetimeAK)
daily.mean.velocity.strt <- strt.2019.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveV), list(name = mean))
######### Daily Q ##########
#discharge
strt.2019.Q$date <- as.Date(strt.2019.Q$DateTime)
strt.2019.Q <- strt.2019.Q %>% rename(discharge = Q)
strt.discharge <- na.omit(strt.2019.Q) %>%
group_by(date) %>%
summarise_at(vars(discharge), list(name = mean)) %>% rename(discharge = name)
daily.mean.velocity.strt <- daily.mean.velocity.strt %>% rename(velocity = name)
daily.mean.depth.strt <- daily.mean.depth.strt %>% rename(depth = name)
data <- merge(daily.mean.velocity.strt,daily.mean.depth.strt, by = "date")
data <- merge(data, strt.discharge, by = "date")
view(data)
#Equations
data$k600.1 <-  ((data$velocity * strt.slope)^(0.89)) * (data$depth^(0.54)) * 5037
data$k600.3 <-  1162 * (strt.slope^(0.77)) * (data$velocity^(0.85))
data$k600.4 <- ((data$velocity*strt.slope)^(0.76)) * 951.5
data$k600.5 <- (data$velocity*strt.slope) * 2841 + 2.02
data$k600.6 <- 929*((data$velocity*strt.slope)^(0.75)) * data$discharge^(0.011)
data$k600.7 <- 4725*((data$velocity*strt.slope)^(0.86)) * (data$discharge^(-0.14)) *(data$depth^(0.66))
view(data)
metab.stuart <- read.csv(here("outputs","stuart2019-Run_2023-01-09.csv"))
SM.K <- metab.stuart %>% select(date, K600_daily_mean)
SM.K <- SM.K %>% rename(k600.SM = K600_daily_mean)
SM.K$date <- as.Date(SM.K$date)
data2 <- merge(data,SM.K, by = "date")
# ALL YEARS
K.plot1_stuart_2019 <- data2 %>%
select(date, starts_with('k600')) %>%
gather(type, k600.value, starts_with('k600')) %>%  ggplot(aes(x=date, y=k600.value, color=type)) + geom_line() + theme_bw() +
scale_color_discrete('variable') + labs(title = "K600, stuart 2019. From Raymond Equations ", y = expression(paste("K600 (", d^-1, ")")))
K.plot1_stuart_2019
############### stuart 2020 ############
#slope
strt.slope <- 2.13534/100
Q_2020 <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_Discharge/Predicted_Discharge/2020/Q_2020.csv")
Q_2020$DateTime <-  force_tz(as.POSIXct(ymd_hms(Q_2020$DateTime)), tz = "America/Anchorage")
#### Breaking up into sites ####
strt_Q_2020 <- Q_2020 %>% filter(Site == "STRT")
strt.2020.Q <- strt_Q_2020 %>%
select(DateTime, Q, Site)
############# Continuous Depth ############
# # strt 2020:
#download flowmeter data
#download flowmeter data
WR_20.url <- "https://drive.google.com/drive/u/1/folders/1x_E4gaPvjRLDcrM8lN2ao4_o0bzdMBrb"
WR.20.1 <- drive_get(as_id(WR_20.url))
strt.wr20_glist <- drive_ls(WR.20.1, pattern = "R_Flowmeter Q calculation_STRT_for_R_JAA.csv")
walk(strt.wr20_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_20.Data <- read.csv("R_Flowmeter Q calculation_STRT_for_R_JAA.csv",
header = TRUE, na.strings=c("","NA","blank"))%>% rename(Date = ï..Date)
strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_20.Data$datetimeAK <- as.POSIXct(paste(as.character(strt_WR_20.Data$Date), strt_WR_20.Data$Time), format="%y%m%d %H:%M")
strt_WR_20.Data <- strt_WR_20.Data %>%
select(Depth..cm., datetimeAK)
strt_depth_20_WR <- ddply(na.omit(strt_WR_20.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_20)
strt_depth_20_WR <- setDT(strt_depth_20_WR)
strt_depth_20_WR <- strt_depth_20_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2020.pt <- strt.2020.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2020.pt <- strt.2020.pt %>%
#   mutate(across(c(AvgAbsDepth),
#                 ~ifelse(datetimeAK >= "2020-08-26 02:00:00" & datetimeAK <= "2020-09-08 12:15:00", NA, .)))
strt.2020.q.dt <- strt.2020.Q
strt.2020.q.dt <- strt.2020.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_depth_20_WR)
setDT(strt.2020.q.dt)
strt.2020.q.dt$datetimeAK1 <- strt.2020.q.dt$datetimeAK
setkey( strt.2020.q.dt, datetimeAK )
setkey( strt_depth_20_WR, datetimeAK )
#WR was taken when EXO out of water. round depth point to nearest in data record
rounded.dates_strt20 <- strt.2020.q.dt[ strt_depth_20_WR, roll = "nearest" ]
rounded.dates_strt20_WR_Q <- rounded.dates_strt20 %>% rename(discharge = Q) %>%
select(datetimeAK, discharge, meanDepth)
#convert to meters
rounded.dates_strt20_WR_Q$meanDepth <- rounded.dates_strt20_WR_Q$meanDepth /100
strt_pt_wr_graph <- ggplot(rounded.dates_strt20_WR_Q, aes(discharge, meanDepth)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("Depth (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt20_depth_mod <- lm(meanDepth~discharge, data = rounded.dates_strt20_WR_Q)
summary(strt20_depth_mod)
plot(meanDepth~discharge, data = rounded.dates_strt20_WR_Q)
# abline(strt20_depth_mod)
#extract slope of model and develop rating curve
strt.2020.q.dt$RatingCurveDepth <- strt20_depth_mod$coefficients[1]+(strt20_depth_mod$coefficients[2])*strt.2020.q.dt$Q
strt.2020.q.dt$date <- as.Date(strt.2020.q.dt$datetimeAK)
daily.mean.depth.strt <- strt.2020.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveDepth), list(name = mean))
#########
############# Continuous Velocity ############
# # strt 2020:
#download flowmeter data
WR_20.url <- "https://drive.google.com/drive/u/1/folders/1x_E4gaPvjRLDcrM8lN2ao4_o0bzdMBrb"
WR.20.1 <- drive_get(as_id(WR_20.url))
strt.wr20_glist <- drive_ls(WR.20.1, pattern = "R_Flowmeter Q calculation_STRT_for_R_JAA.csv")
walk(strt.wr20_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_20.Data <- read.csv("R_Flowmeter Q calculation_STRT_for_R_JAA.csv",
header = TRUE, na.strings=c("","NA","blank"))%>% rename(Date = ï..Date)
strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_20.Data <- strt_WR_20.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_20.Data$datetimeAK <- as.POSIXct(paste(as.character(strt_WR_20.Data$Date), strt_WR_20.Data$Time), format="%y%m%d %H:%M")
strt_WR_20.Data <- strt_WR_20.Data %>%
select(Mean.Vel..m.s., datetimeAK)
strt_V_20_WR <- ddply(na.omit(strt_WR_20.Data), .(datetimeAK), summarize, meanVelocity = mean(as.numeric(Mean.Vel..m.s.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_20)
strt_V_20_WR <- setDT(strt_V_20_WR)
strt_V_20_WR <- strt_V_20_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2020.pt <- strt.2020.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2020.pt <- strt.2020.pt %>%
#   mutate(across(c(AvgAbsV),
#                 ~ifelse(datetimeAK >= "2020-08-26 02:00:00" & datetimeAK <= "2020-09-08 12:15:00", NA, .)))
strt.2020.q.dt <- strt.2020.Q
strt.2020.q.dt <- strt.2020.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_V_20_WR)
setDT(strt.2020.q.dt)
strt.2020.q.dt$datetimeAK1 <- strt.2020.q.dt$datetimeAK
setkey( strt.2020.q.dt, datetimeAK )
setkey( strt_V_20_WR, datetimeAK )
#WR was taken when EXO out of water. round V point to nearest in data record
rounded.dates_strt20 <- strt.2020.q.dt[ strt_V_20_WR, roll = "nearest" ]
rounded.dates_strt20_WR_Q <- rounded.dates_strt20  %>% rename (discharge = Q) %>% select(datetimeAK, discharge, meanVelocity)
strt_pt_wr_graph <- ggplot(rounded.dates_strt20_WR_Q, aes(discharge, meanVelocity)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("V (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt20_V_mod <- lm(meanVelocity~discharge, data = rounded.dates_strt20_WR_Q)
summary(strt20_V_mod)
plot(meanVelocity~discharge, data = rounded.dates_strt20_WR_Q)
# abline(strt20_V_mod)
#extract slope of model and develop rating curve
strt.2020.q.dt$RatingCurveV <- strt20_V_mod$coefficients[1]+(strt20_V_mod$coefficients[2])*strt.2020.q.dt$Q
strt.2020.q.dt$date <- as.Date(strt.2020.q.dt$datetimeAK)
daily.mean.velocity.strt <- strt.2020.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveV), list(name = mean))
######### Daily Q ##########
#discharge
strt.2020.Q$date <- as.Date(strt.2020.Q$DateTime)
strt.2020.Q <- strt.2020.Q %>% rename(discharge = Q)
strt.discharge <- na.omit(strt.2020.Q) %>%
group_by(date) %>%
summarise_at(vars(discharge), list(name = mean)) %>% rename(discharge = name)
daily.mean.velocity.strt <- daily.mean.velocity.strt %>% rename(velocity = name)
daily.mean.depth.strt <- daily.mean.depth.strt %>% rename(depth = name)
data <- merge(daily.mean.velocity.strt,daily.mean.depth.strt, by = "date")
data <- merge(data, strt.discharge, by = "date")
#slope
strt.slope <- 2.13534/100
#Equations
data$k600.1 <-  ((data$velocity * strt.slope)^(0.89)) * (data$depth^(0.54)) * 5037
data$k600.3 <-  1162 * (strt.slope^(0.77)) * (data$velocity^(0.85))
data$k600.4 <- ((data$velocity*strt.slope)^(0.76)) * 951.5
data$k600.5 <- (data$velocity*strt.slope) * 2841 + 2.02
data$k600.6 <- 929*((data$velocity*strt.slope)^(0.75)) * data$discharge^(0.011)
data$k600.7 <- 4725*((data$velocity*strt.slope)^(0.86)) * (data$discharge^(-0.14)) *(data$depth^(0.66))
metab.stuart <- read.csv(here("outputs","stuart2020-Run_2023-01-09.csv"))
SM.K <- metab.stuart %>% select(date, K600_daily_mean)
SM.K <- SM.K %>% rename(k600.SM = K600_daily_mean)
SM.K$date <- as.Date(SM.K$date)
data2 <- merge(data,SM.K, by = "date")
# ALL YEARS
K.plot1_stuart_2020 <- data2 %>%
select(date, starts_with('k600')) %>%
gather(type, k600.value, starts_with('k600')) %>%  ggplot(aes(x=date, y=k600.value, color=type)) + geom_line() + theme_bw() +
scale_color_discrete('variable') + labs(title = "K600, stuart 2020. From Raymond Equations ", y = expression(paste("K600 (", d^-1, ")")))
K.plot1_stuart_2020
###### strt 2021
############### stuart 2021 ############
#slope
strt.slope <- 2.13534/100
Q_2021 <- read.csv("C:/Users/jacob/OneDrive - University of Alaska/GitHub/DoD_Discharge/Predicted_Discharge/2021/Q_2021.csv")
Q_2021$DateTime <-  force_tz(as.POSIXct(ymd_hms(Q_2021$DateTime)), tz = "America/Anchorage")
#### Breaking up into sites ####
strt_Q_2021 <- Q_2021 %>% filter(Site == "STRT")
strt.2021.Q <- strt_Q_2021 %>%
select(DateTime, Q, Site)
############# Continuous Depth ############
# # strt 2021:
#download flowmeter data
#download flowmeter data
WR_21.url <- "https://drive.google.com/drive/u/1/folders/1LTD4EFX3_Yas0ZCF8rKLl6dxSeZDvkDY"
WR.21.1 <- drive_get(as_id(WR_21.url))
strt.wr21_glist <- drive_ls(WR.21.1, pattern = "R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv")
walk(strt.wr21_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_21.Data <- read.csv("R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv",
header = TRUE, na.strings=c("","NA","blank"))
strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_21.Data$datetimeAK <- as.POSIXct(paste(as.character(strt_WR_21.Data$Date), strt_WR_21.Data$Time), format="%y%m%d %H:%M")
strt_WR_21.Data <- strt_WR_21.Data %>%
select(Depth..cm., datetimeAK)
strt_depth_21_WR <- ddply(na.omit(strt_WR_21.Data), .(datetimeAK), summarize, meanDepth = mean(as.numeric(Depth..cm.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_21)
strt_depth_21_WR <- setDT(strt_depth_21_WR)
strt_depth_21_WR <- strt_depth_21_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2021.pt <- strt.2021.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2021.pt <- strt.2021.pt %>%
#   mutate(across(c(AvgAbsDepth),
#                 ~ifelse(datetimeAK >= "2021-08-26 02:00:00" & datetimeAK <= "2021-09-08 12:15:00", NA, .)))
strt.2021.q.dt <- strt.2021.Q
strt.2021.q.dt <- strt.2021.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_depth_21_WR)
setDT(strt.2021.q.dt)
strt.2021.q.dt$datetimeAK1 <- strt.2021.q.dt$datetimeAK
setkey( strt.2021.q.dt, datetimeAK )
setkey( strt_depth_21_WR, datetimeAK )
#WR was taken when EXO out of water. round depth point to nearest in data record
rounded.dates_strt21 <- strt.2021.q.dt[ strt_depth_21_WR, roll = "nearest" ]
rounded.dates_strt21_WR_Q <- rounded.dates_strt21 %>% rename(discharge = Q) %>%
select(datetimeAK, discharge, meanDepth)
#convert to meters
rounded.dates_strt21_WR_Q$meanDepth <- rounded.dates_strt21_WR_Q$meanDepth /100
strt_pt_wr_graph <- ggplot(rounded.dates_strt21_WR_Q, aes(discharge, meanDepth)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("Depth (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt21_depth_mod <- lm(meanDepth~discharge, data = rounded.dates_strt21_WR_Q)
summary(strt21_depth_mod)
plot(meanDepth~discharge, data = rounded.dates_strt21_WR_Q)
# abline(strt21_depth_mod)
#extract slope of model and develop rating curve
strt.2021.q.dt$RatingCurveDepth <- strt21_depth_mod$coefficients[1]+(strt21_depth_mod$coefficients[2])*strt.2021.q.dt$Q
strt.2021.q.dt$date <- as.Date(strt.2021.q.dt$datetimeAK)
daily.mean.depth.strt <- strt.2021.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveDepth), list(name = mean))
#########
############# Continuous Velocity ############
# # strt 2021:
#download flowmeter data
WR_21.url <- "https://drive.google.com/drive/u/1/folders/1LTD4EFX3_Yas0ZCF8rKLl6dxSeZDvkDY"
WR.21.1 <- drive_get(as_id(WR_21.url))
strt.wr21_glist <- drive_ls(WR.21.1, pattern = "R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv")
walk(strt.wr21_glist$id, ~ drive_download(as_id(.x), overwrite = TRUE))
strt_WR_21.Data <- read.csv("R_Flowmeter Q calculation_STRT_for_R_JAA_2021.csv",
header = TRUE, na.strings=c("","NA","blank"))
strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Date, .direction = ("down"))
strt_WR_21.Data <- strt_WR_21.Data %>% tidyr::fill(Time, .direction = ("down"))
strt_WR_21.Data$datetimeAK <- as.POSIXct(paste(as.character(strt_WR_21.Data$Date), strt_WR_21.Data$Time), format="%y%m%d %H:%M")
strt_WR_21.Data <- strt_WR_21.Data %>%
select(Mean.Vel..m.s., datetimeAK)
strt_V_21_WR <- ddply(na.omit(strt_WR_21.Data), .(datetimeAK), summarize, meanVelocity = mean(as.numeric(Mean.Vel..m.s.)))
# strt_wr.lm <- lm(meanDepth~datetimeAK, strt_depth_21)
strt_V_21_WR <- setDT(strt_V_21_WR)
strt_V_21_WR <- strt_V_21_WR %>%
dplyr::rename(datetimeAK = datetimeAK)
# strt.2021.pt <- strt.2021.pt %>%
# dplyr::rename(datetimeAK = DateTime)
# strt.2021.pt <- strt.2021.pt %>%
#   mutate(across(c(AvgAbsV),
#                 ~ifelse(datetimeAK >= "2021-08-26 02:00:00" & datetimeAK <= "2021-09-08 12:15:00", NA, .)))
strt.2021.q.dt <- strt.2021.Q
strt.2021.q.dt <- strt.2021.q.dt %>%
dplyr::rename(datetimeAK = DateTime)
setDT(strt_V_21_WR)
setDT(strt.2021.q.dt)
strt.2021.q.dt$datetimeAK1 <- strt.2021.q.dt$datetimeAK
setkey( strt.2021.q.dt, datetimeAK )
setkey( strt_V_21_WR, datetimeAK )
#WR was taken when EXO out of water. round V point to nearest in data record
rounded.dates_strt21 <- strt.2021.q.dt[ strt_V_21_WR, roll = "nearest" ]
rounded.dates_strt21_WR_Q <- rounded.dates_strt21  %>% rename (discharge = Q) %>% select(datetimeAK, discharge, meanVelocity)
strt_pt_wr_graph <- ggplot(rounded.dates_strt21_WR_Q, aes(discharge, meanVelocity)) +
geom_point()
# Add regression line
strt_pt_wr_graph + geom_smooth(method = lm) + xlab("Discharge") +ylab ("V (WR)")
ggsave("plots/strt_Q_wr_graph.png", width = 15, height = 10, units = "cm", scale = 1.3)
strt21_V_mod <- lm(meanVelocity~discharge, data = rounded.dates_strt21_WR_Q)
summary(strt21_V_mod)
plot(meanVelocity~discharge, data = rounded.dates_strt21_WR_Q)
# abline(strt21_V_mod)
#extract slope of model and develop rating curve
strt.2021.q.dt$RatingCurveV <- strt21_V_mod$coefficients[1]+(strt21_V_mod$coefficients[2])*strt.2021.q.dt$Q
strt.2021.q.dt$date <- as.Date(strt.2021.q.dt$datetimeAK)
daily.mean.velocity.strt <- strt.2021.q.dt %>%
group_by(date) %>%
summarise_at(vars(RatingCurveV), list(name = mean))
######### Daily Q ##########
#discharge
strt.2021.Q$date <- as.Date(strt.2021.Q$DateTime)
strt.2021.Q <- strt.2021.Q %>% rename(discharge = Q)
strt.discharge <- na.omit(strt.2021.Q) %>%
group_by(date) %>%
summarise_at(vars(discharge), list(name = mean)) %>% rename(discharge = name)
daily.mean.velocity.strt <- daily.mean.velocity.strt %>% rename(velocity = name)
daily.mean.depth.strt <- daily.mean.depth.strt %>% rename(depth = name)
data <- merge(daily.mean.velocity.strt,daily.mean.depth.strt, by = "date")
data <- merge(data, strt.discharge, by = "date")
#slope
strt.slope <- 2.13534/100
#Equations
data$k600.1 <-  ((data$velocity * strt.slope)^(0.89)) * (data$depth^(0.54)) * 5037
data$k600.3 <-  1162 * (strt.slope^(0.77)) * (data$velocity^(0.85))
data$k600.4 <- ((data$velocity*strt.slope)^(0.76)) * 951.5
data$k600.5 <- (data$velocity*strt.slope) * 2841 + 2.02
data$k600.6 <- 929*((data$velocity*strt.slope)^(0.75)) * data$discharge^(0.011)
data$k600.7 <- 4725*((data$velocity*strt.slope)^(0.86)) * (data$discharge^(-0.14)) *(data$depth^(0.66))
metab.stuart <- read.csv(here("outputs","stuart2021-Run_2023-01-09.csv"))
SM.K <- metab.stuart %>% select(date, K600_daily_mean)
SM.K <- SM.K %>% rename(k600.SM = K600_daily_mean)
SM.K$date <- as.Date(SM.K$date)
data2 <- merge(data,SM.K, by = "date")
# ALL YEARS
K.plot1_stuart_2021 <- data2 %>%
select(date, starts_with('k600')) %>%
gather(type, k600.value, starts_with('k600')) %>%  ggplot(aes(x=date, y=k600.value, color=type)) + geom_line() + theme_bw() +
scale_color_discrete('variable') + labs(title = "K600, stuart 2021. From Raymond Equations ", y = expression(paste("K600 (", d^-1, ")")))
K.plot1_stuart_2021
grid.arrange(K.plot1_stuart_2019,K.plot1_stuart_2020,K.plot1_stuart_2021,K.plot1_poker_2019,K.plot1_poker_2020,K.plot1_poker_2021,K.plot1_vault_2019,K.plot1_vault_2020,K.plot1_vault_2021,K.plot1_french_2019,K.plot1_french_2020,K.plot1_french_2021,K.plot1_moose_2019,K.plot1_moose_2020,K.plot1_moose_2021, ncol = 3)
grid.arrange(K.plot1_stuart_2019,K.plot1_stuart_2020,K.plot1_stuart_2021,K.plot1_poker_2019,K.plot1_poker_2020,K.plot1_poker_2021,K.plot1_vault_2019,K.plot1_vault_2020,K.plot1_vault_2021,K.plot1_french_2019,K.plot1_french_2020,K.plot1_french_2021,K.plot1_moose_2019,K.plot1_moose_2020,K.plot1_moose_2021, ncol = 3)
library(ggpubr)
library(anytime)
library(googlesheets4)
library(ggpmisc)
library(plyr)
library(dplyr)
library(lubridate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(zoo)
library(xts)
library(forecast)
library(googledrive)
library(streamMetabolizer)
library(readr)
library(here)
library(rstan)
library(imputeTS)
library(itsmr)
library(purrr)
library(naniar)
library(data.table)
library(grid)
library(ggtext)
load(here("Outputs", "poker2019-Run_2023-01-09.RData")))
here("Outputs", "poker2019-Run_2023-01-09.RData")
load(here("Outputs", "poker2019-Run_2023-01-09.RData")))
load(here("Outputs", "poker2019-Run_2023-01-09.RData"))
here()
