View(K600_nights_PC)
#### Now we do Toolik River ####
TR <- read_delim(here("Gerard_Code", "TR_ts2018.csv"),";", escape_double = FALSE, trim_ws = TRUE) %>%
mutate(depth_m=channel_depth_cm/100, discharge=Discharge_L_s/1000) %>%
rename(DO.obs=DO_mgL, DO.sat=Dosat_mgL, local.time=`Alaska Standard Time`,
temp.water=Temp_O2logger, light=Light_lux)
#select the necessary variables for metabolism
TRmet <- TR %>%
select( local.time, DO.obs, DO.sat, depth_m, light, temp.water, Discharge_L_s  ) %>%
rename(solar.time=local.time, depth=depth_m) %>%
mutate(discharge=Discharge_L_s/1000) %>% select(-Discharge_L_s)
#Make a new data.frame with tme mean values of each parameters
TRdaily <- TRmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
TRmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
TRmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_TR <- calc_bins(log(TRdaily$discharge), 'number', n=4)
dat_night <- TRmet %>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
View(dat_night)
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC"))
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC"))
data.poke.mm.all$light <- calc_light(data.poke.mm.all$solar.time, 65.152855, -147.486655)
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
#I also look at little k, (in m d-1), as is the one I use for CO2 fluxes
ggplot(K600_nights_TR)+
geom_pointrange( aes(discharge, y=K600.daily*depth, ymin=K600.daily.lower*depth,
ymax=K600.daily.upper*depth), size=1)
#I also look at little k, (in m d-1), as is the one I use for CO2 fluxes
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily*depth, ymin=K600.daily.lower*depth,
ymax=K600.daily.upper*depth), size=1)
#I use just a polynomial to get some K values for a given discharge.
#This is just for the priors so are quite uninformed
###TKH: Change the degree of the polynomial to match the number of Q bins
Q_K_NPC <- lm(K600.daily~poly(discharge,6), data=K600_nights_TR)
#Calculate the bins of discharge, I do 4 (WE USE 6) given the shape of the K data,
#but I do some trial and error here
##TKH: Use more bins for wider variation in Q.
#Options for binning data are: number, interval, width, or custom
#Number divides data into bins of equal numbers of Q observations, with bins of irregular widths. This is probably the best option for shorter datasets or those with unequal numbers of observations under various values of discharge.
#calc_bins(ln.disch, 'interval', n=5)
#df_int <- data.frame(t=1:length(ln.disch), vec=ln.disch, bin=bins_int$names[bins_int$vec])
#Interval divides data into equal width intervals, with varying numbers of observations within each interval. This could make sense for long datasets with good representation of observations across all values of discharge.
#Width allows you to specify the widths of the bins
#The difference between width and custom seems subtle. Custom allows you to set the upper and lower limits as well as the width of the bins.
bins_Q_PC <- data.frame(discharge = calc_bins(PCdaily$discharge, 'number', n=6)$bounds)
#Now I add K values for the nodes of discharge
pred_K_NPC <- data.frame(K.600 = predict(Q_K_NPC, newdata=bins_Q_PC, se.fit = T),
discharge=bins_Q_PC$discharge)
#comparison of the K nodes and the NTR data
ggplot()+ geom_point(data=K600_nights_PC, aes(discharge, K600.daily))+
geom_pointrange(data = pred_K_NPC, aes(x=discharge, y=K.600.fit,ymin=K.600.fit-K.600.se.fit,
ymax=K.600.fit+K.600.se.fit ), color='red')
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC"))
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:4,21:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:2,23:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
View(dat_night)
library(tidyverse)
library(streamMetabolizer)
library(ggpubr)
library(lubridate)
library(unitted)
# TR_ts2018.csv <- read.csv(here("Gerard_Code","TR_ts2018.csv"))
#### Now we do Toolik River ####
TR <- read_delim(here("Gerard_Code", "TR_ts2018.csv"),";", escape_double = FALSE, trim_ws = TRUE) %>%
mutate(depth_m=channel_depth_cm/100, discharge=Discharge_L_s/1000) %>%
rename(DO.obs=DO_mgL, DO.sat=Dosat_mgL, local.time=`Alaska Standard Time`,
temp.water=Temp_O2logger, light=Light_lux)
#select the necessary variables for metabolism
TRmet <- TR %>%
select( local.time, DO.obs, DO.sat, depth_m, light, temp.water, Discharge_L_s  ) %>%
rename(solar.time=local.time, depth=depth_m) %>%
mutate(discharge=Discharge_L_s/1000) %>% select(-Discharge_L_s)
#Make a new data.frame with tme mean values of each parameters
TRdaily <- TRmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
TRmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
TRmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_TR <- calc_bins(log(TRdaily$discharge), 'number', n=4)
#First I explore the potential k values from NTR ####
#### Looking at the Q~k stuff
#Prepare data for NTR, I have to force the light to go to 0 from 20-5
###Alex: Look at this carefully for our data. We might need to use a narrower window here.
###TKH notes (from Hall & Hotchkiss:
#1) O2 must be out of equilibrium at the start of nighttime due to the day's photosynthetic activity
#2) Rate of return to equilibrium is a function of gas exchange rate, dO/dt = ER +K(Osat-O)
#3) Regression should start at nightfall (when light goes to near 0), and continue until dO/dt ~ 0. This is not a huge issue for us, since we are only using the nighttime regression to generate a prior to model k.
dat_night <- TRmet %>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
View(dat_night)
########### TRIAL NIGHTTIME REGRESSION ##########
library(tidyverse)
library(streamMetabolizer)
library(ggpubr)
library(lubridate)
library(unitted)
#### Now we do Toolik River ####
# TR <- read_delim("TR_ts2018.csv",";", escape_double = FALSE, trim_ws = TRUE) %>%
#   mutate(depth_m=channel_depth_cm/100, discharge=Discharge_L_s/1000) %>%
#   rename(DO.obs=DO_mgL, DO.sat=Dosat_mgL, local.time=`Alaska Standard Time`,
#          temp.water=Temp_O2logger, light=Light_lux)
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC"))
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
#First I explore the potential k values from NTR ####
#### Looking at the Q~k stuff
#Prepare data for NTR, I have to force the light to go to 0 from 20-5
###Alex: Look at this carefully for our data. We might need to use a narrower window here.
###TKH notes (from Hall & Hotchkiss:
#1) O2 must be out of equilibrium at the start of nighttime due to the day's photosynthetic activity
#2) Rate of return to equilibrium is a function of gas exchange rate, dO/dt = ER +K(Osat-O)
#3) Regression should start at nightfall (when light goes to near 0), and continue until dO/dt ~ 0. This is not a huge issue for us, since we are only using the nighttime regression to generate a prior to model k.
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
View(dat_night)
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC")) %>% filter(solar.time> "2020-07-15"&solar.time<"2020-08-01")
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
#First I explore the potential k values from NTR ####
#### Looking at the Q~k stuff
#Prepare data for NTR, I have to force the light to go to 0 from 20-5
###Alex: Look at this carefully for our data. We might need to use a narrower window here.
###TKH notes (from Hall & Hotchkiss:
#1) O2 must be out of equilibrium at the start of nighttime due to the day's photosynthetic activity
#2) Rate of return to equilibrium is a function of gas exchange rate, dO/dt = ER +K(Osat-O)
#3) Regression should start at nightfall (when light goes to near 0), and continue until dO/dt ~ 0. This is not a huge issue for us, since we are only using the nighttime regression to generate a prior to model k.
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
#### Now we do Toolik River ####
# TR <- read_delim("TR_ts2018.csv",";", escape_double = FALSE, trim_ws = TRUE) %>%
#   mutate(depth_m=channel_depth_cm/100, discharge=Discharge_L_s/1000) %>%
#   rename(DO.obs=DO_mgL, DO.sat=Dosat_mgL, local.time=`Alaska Standard Time`,
#          temp.water=Temp_O2logger, light=Light_lux)
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC")) %>% filter(solar.time> "2020-06-15"&solar.time<"2020-07-01")
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
#First I explore the potential k values from NTR ####
#### Looking at the Q~k stuff
#Prepare data for NTR, I have to force the light to go to 0 from 20-5
###Alex: Look at this carefully for our data. We might need to use a narrower window here.
###TKH notes (from Hall & Hotchkiss:
#1) O2 must be out of equilibrium at the start of nighttime due to the day's photosynthetic activity
#2) Rate of return to equilibrium is a function of gas exchange rate, dO/dt = ER +K(Osat-O)
#3) Regression should start at nightfall (when light goes to near 0), and continue until dO/dt ~ 0. This is not a huge issue for us, since we are only using the nighttime regression to generate a prior to model k.
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
library(tidyverse)
library(streamMetabolizer)
library(ggpubr)
library(lubridate)
library(unitted)
#### Now we do Toolik River ####
# TR <- read_delim("TR_ts2018.csv",";", escape_double = FALSE, trim_ws = TRUE) %>%
#   mutate(depth_m=channel_depth_cm/100, discharge=Discharge_L_s/1000) %>%
#   rename(DO.obs=DO_mgL, DO.sat=Dosat_mgL, local.time=`Alaska Standard Time`,
#          temp.water=Temp_O2logger, light=Light_lux)
data.poke.mm.all <- read.csv(here("outputs", "clean.poke.2020.full.csv"))
#select the necessary variables for metabolism
PCmet <- data.poke.mm.all %>%
select( solar.time, DO.obs, DO.sat.EXO, depth, light, temp.water, discharge  ) %>%
mutate(discharge=discharge/1000) %>% rename(DO.sat = DO.sat.EXO) %>% mutate(solar.time = as.POSIXct(solar.time, tz="UTC"))
PCmet$light <- calc_light(PCmet$solar.time, 65.152855, -147.486655)
#Make a new data.frame with tme mean values of each parameters
PCdaily <- PCmet %>%
group_by(date=as.Date(solar.time)) %>%
summarise_all(mean, na.rm=T)
#Explore the data with some general plots
PCmet %>% unitted::v() %>%
mutate(DO.pctsat = 100 * (DO.obs / DO.sat)) %>%
select(solar.time, starts_with('DO')) %>%
gather(type, DO.value, starts_with('DO')) %>%
mutate(units=ifelse(type == 'DO.pctsat', 'DO\n(% sat)', 'DO\n(mg/L)')) %>%
ggplot(aes(x=solar.time, y=DO.value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
labels <- c(depth='depth\n(m)', temp.water='water temp\n(deg C)', light='PAR\n(umol m^-2 s^-1)')
PCmet %>% unitted::v() %>%
select(solar.time, depth, temp.water, light) %>%
gather(type, value, depth, temp.water, light) %>%
mutate(
type=ordered(type, levels=c('depth','temp.water','light')),
units=ordered(labels[type], unname(labels))) %>%
ggplot(aes(x=solar.time, y=value, color=type)) + geom_line() +
facet_grid(units ~ ., scale='free_y') + theme_bw() +
scale_color_discrete('variable')
#Calculate the bins of discharge, I do 4 but re run this several times before
###TKH: Use more bins (5-6, for season-length datasets)
bins_Q_PC <- calc_bins(log(PCdaily$discharge), 'number', n=6)
#First I explore the potential k values from NTR ####
#### Looking at the Q~k stuff
#Prepare data for NTR, I have to force the light to go to 0 from 20-5
###Alex: Look at this carefully for our data. We might need to use a narrower window here.
###TKH notes (from Hall & Hotchkiss:
#1) O2 must be out of equilibrium at the start of nighttime due to the day's photosynthetic activity
#2) Rate of return to equilibrium is a function of gas exchange rate, dO/dt = ER +K(Osat-O)
#3) Regression should start at nightfall (when light goes to near 0), and continue until dO/dt ~ 0. This is not a huge issue for us, since we are only using the nighttime regression to generate a prior to model k.
dat_night <- PCmet %>% mutate(solar.time = as.POSIXct(solar.time, tz = "UTC"))%>%
mutate(light=if_else(hour(solar.time) %in% c(0:5,20:24), 0, light)  )
#Do a NTR for all data
mm2 <- metab_night(specs = specs(mm_name("night")), dat_night)
K600_nights_PC <- get_params(mm2,  uncertainty='ci') %>%
select(date, K600.daily, K600.daily.lower, K600.daily.upper) %>%
left_join(PCdaily) %>% mutate(K_source="night")
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily, ymin=K600.daily.lower,
ymax=K600.daily.upper), size=1)
#I also look at little k, (in m d-1), as is the one I use for CO2 fluxes
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily*depth, ymin=K600.daily.lower*depth,
ymax=K600.daily.upper*depth), size=1)
#I use just a polynomial to get some K values for a given discharge.
#This is just for the priors so are quite uninformed
###TKH: Change the degree of the polynomial to match the number of Q bins
Q_K_NPC <- lm(K600.daily~poly(discharge,6), data=K600_nights_TR)
#I also look at little k, (in m d-1), as is the one I use for CO2 fluxes
ggplot(K600_nights_PC)+
geom_pointrange( aes(discharge, y=K600.daily*depth, ymin=K600.daily.lower*depth,
ymax=K600.daily.upper*depth), size=1)
#I use just a polynomial to get some K values for a given discharge.
#This is just for the priors so are quite uninformed
###TKH: Change the degree of the polynomial to match the number of Q bins
Q_K_NPC <- lm(K600.daily~poly(discharge,6), data=K600_nights_PC)
summary(Q_K_NTR)
summary(Q_K_NPC)
#Calculate the bins of discharge, I do 4 (WE USE 6) given the shape of the K data,
#but I do some trial and error here
##TKH: Use more bins for wider variation in Q.
#Options for binning data are: number, interval, width, or custom
#Number divides data into bins of equal numbers of Q observations, with bins of irregular widths. This is probably the best option for shorter datasets or those with unequal numbers of observations under various values of discharge.
#calc_bins(ln.disch, 'interval', n=5)
#df_int <- data.frame(t=1:length(ln.disch), vec=ln.disch, bin=bins_int$names[bins_int$vec])
#Interval divides data into equal width intervals, with varying numbers of observations within each interval. This could make sense for long datasets with good representation of observations across all values of discharge.
#Width allows you to specify the widths of the bins
#The difference between width and custom seems subtle. Custom allows you to set the upper and lower limits as well as the width of the bins.
bins_Q_PC <- data.frame(discharge = calc_bins(PCdaily$discharge, 'number', n=6)$bounds)
#Now I add K values for the nodes of discharge
pred_K_NPC <- data.frame(K.600 = predict(Q_K_NPC, newdata=bins_Q_PC, se.fit = T),
discharge=bins_Q_PC$discharge)
#comparison of the K nodes and the NTR data
ggplot()+ geom_point(data=K600_nights_PC, aes(discharge, K600.daily))+
geom_pointrange(data = pred_K_NPC, aes(x=discharge, y=K.600.fit,ymin=K.600.fit-K.600.se.fit,
ymax=K.600.fit+K.600.se.fit ), color='red')
#comparison of the K nodes and the NTR data
ggplot()+ geom_point(data=K600_nights_PC, aes(discharge, K600.daily))+
geom_pointrange(data = pred_K_NPC, aes(x=discharge, y=K.600.fit,ymin=K.600.fit-K.600.se.fit,
ymax=K.600.fit+K.600.se.fit ), color='red')+ggtitle("poker 2020 Gerard Code Nightime Regression")
